; Listing generated by Microsoft (R) Optimizing Compiler Version 19.12.25831.0 

	TITLE	C:\Repos\Galaxy\Galaxy\Main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?length@?$char_traits@D@std@@SAIQBD@Z		; std::char_traits<char>::length
PUBLIC	?copy@?$char_traits@D@std@@SAPADQADQBDI@Z	; std::char_traits<char>::copy
PUBLIC	?move@?$char_traits@D@std@@SAPADQADQBDI@Z	; std::char_traits<char>::move
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
PUBLIC	??0_Container_proxy@std@@QAE@XZ			; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	??1_Container_base12@std@@QAE@XZ		; std::_Container_base12::~_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Deallocate@std@@YAXPAXIII@Z			; std::_Deallocate
PUBLIC	??$_Convert_size@I@std@@YAII@Z			; std::_Convert_size<unsigned int>
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXQADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
PUBLIC	?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$allocator@D@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$allocator@D@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?__autoclassinit2@Shader@Graphics@Engine@@QAEXI@Z ; Engine::Graphics::Shader::__autoclassinit2
PUBLIC	??0?$allocator@UBufferElement@Graphics@Engine@@@std@@QAE@XZ ; std::allocator<Engine::Graphics::BufferElement>::allocator<Engine::Graphics::BufferElement>
PUBLIC	?deallocate@?$allocator@UBufferElement@Graphics@Engine@@@std@@QAEXQAUBufferElement@Graphics@Engine@@I@Z ; std::allocator<Engine::Graphics::BufferElement>::deallocate
PUBLIC	?allocate@?$allocator@UBufferElement@Graphics@Engine@@@std@@QAEPAUBufferElement@Graphics@Engine@@I@Z ; std::allocator<Engine::Graphics::BufferElement>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@SAIABV?$allocator@UBufferElement@Graphics@Engine@@@2@@Z ; std::_Default_allocator_traits<std::allocator<Engine::Graphics::BufferElement> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@SA?AV?$allocator@UBufferElement@Graphics@Engine@@@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<Engine::Graphics::BufferElement> >::select_on_container_copy_construction
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >
PUBLIC	??1?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::~_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >
PUBLIC	?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Alloc_proxy
PUBLIC	?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Free_proxy
PUBLIC	?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myproxy
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Orphan_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >
PUBLIC	??1?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >::~_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QBEABV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_second
PUBLIC	??1?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::~_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>
PUBLIC	??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
PUBLIC	??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
PUBLIC	??1?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::~vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
PUBLIC	?size@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::size
PUBLIC	?max_size@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::max_size
PUBLIC	?capacity@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::capacity
PUBLIC	?_Destroy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEXPAUBufferElement@Graphics@Engine@@0@Z ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Destroy
PUBLIC	?_Buy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAE_NI@Z ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Buy
PUBLIC	?_Tidy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEXXZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Tidy
PUBLIC	?_Xlength@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@CAXXZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Xlength
PUBLIC	??0VertexBufferLayout@Graphics@Engine@@QAE@XZ	; Engine::Graphics::VertexBufferLayout::VertexBufferLayout
PUBLIC	??1VertexBufferLayout@Graphics@Engine@@QAE@XZ	; Engine::Graphics::VertexBufferLayout::~VertexBufferLayout
PUBLIC	??0VertexBufferLayout@Graphics@Engine@@QAE@ABV012@@Z ; Engine::Graphics::VertexBufferLayout::VertexBufferLayout
PUBLIC	?__autoclassinit2@VertexBufferLayout@Graphics@Engine@@QAEXI@Z ; Engine::Graphics::VertexBufferLayout::__autoclassinit2
PUBLIC	_main
PUBLIC	??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > ><std::allocator<Engine::Graphics::BufferElement>,void>
PUBLIC	??$_Ucopy@PAUBufferElement@Graphics@Engine@@@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEPAUBufferElement@Graphics@Engine@@PAU234@00@Z ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Ucopy<Engine::Graphics::BufferElement *>
PUBLIC	??$_Min_value@I@std@@YAABIABI0@Z		; std::_Min_value<unsigned int>
PUBLIC	??$_Unfancy@D@std@@YAPADPAD@Z			; std::_Unfancy<char>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1><>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$addressof@PAD@std@@YAPAPADAAPAD@Z		; std::addressof<char *>
PUBLIC	??$destroy@PAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPAD@Z ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char *>
PUBLIC	??$_Max_value@I@std@@YAABIABI0@Z		; std::_Max_value<unsigned int>
PUBLIC	??$construct@PADABQAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPADABQAD@Z ; std::_Default_allocator_traits<std::allocator<char> >::construct<char *,char * const &>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$_Allocate@U?$_Default_allocate_traits@$00@std@@@std@@YAPAXIII@Z ; std::_Allocate<std::_Default_allocate_traits<1> >
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0UBufferElement@Graphics@Engine@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Engine::Graphics::BufferElement>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> > >
PUBLIC	??$_Destroy_range@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAXPAUBufferElement@Graphics@Engine@@0AAV?$allocator@UBufferElement@Graphics@Engine@@@0@@Z ; std::_Destroy_range<std::allocator<Engine::Graphics::BufferElement> >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$forward@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YA$$QAV?$allocator@UBufferElement@Graphics@Engine@@@0@AAV10@@Z ; std::forward<std::allocator<Engine::Graphics::BufferElement> >
PUBLIC	??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@$$V@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1><std::allocator<Engine::Graphics::BufferElement> >
PUBLIC	??$_Uninitialized_copy@PAUBufferElement@Graphics@Engine@@PAU123@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00AAV?$allocator@UBufferElement@Graphics@Engine@@@0@@Z ; std::_Uninitialized_copy<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *,std::allocator<Engine::Graphics::BufferElement> >
PUBLIC	??$forward@ABQAD@std@@YAABQADABQAD@Z		; std::forward<char * const &>
PUBLIC	?_Fail@?$_Default_allocate_traits@$00@std@@SAXXZ ; std::_Default_allocate_traits<1>::_Fail
PUBLIC	?_Get_bytes@?$_Default_allocate_traits@$00@std@@SAPAXII@Z ; std::_Default_allocate_traits<1>::_Get_bytes
PUBLIC	??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
PUBLIC	??$_Destroy_range1@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAXPAUBufferElement@Graphics@Engine@@0AAV?$allocator@UBufferElement@Graphics@Engine@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<Engine::Graphics::BufferElement> >
PUBLIC	??$_Unchecked@PAUBufferElement@Graphics@Engine@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@@Z ; std::_Unchecked<Engine::Graphics::BufferElement *>
PUBLIC	??$_Ptr_copy_cat@UBufferElement@Graphics@Engine@@U123@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUBufferElement@Graphics@Engine@@0@Z ; std::_Ptr_copy_cat<Engine::Graphics::BufferElement,Engine::Graphics::BufferElement>
PUBLIC	??$_Uninitialized_copy_al_unchecked@UBufferElement@Graphics@Engine@@U123@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00AAV?$allocator@UBufferElement@Graphics@Engine@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked<Engine::Graphics::BufferElement,Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
PUBLIC	??$_Rechecked@PAUBufferElement@Graphics@Engine@@PAU123@@std@@YAAAPAUBufferElement@Graphics@Engine@@AAPAU123@PAU123@@Z ; std::_Rechecked<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *>
PUBLIC	??$_Copy_memmove@PAUBufferElement@Graphics@Engine@@PAU123@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00@Z ; std::_Copy_memmove<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *>
PUBLIC	?__LINE__Var@?0??_Deallocate@std@@YAXPAXIII@Z@4JA ; `std::_Deallocate'::`1'::__LINE__Var
PUBLIC	??_C@_1NE@MDINKKAA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ ; `string'
PUBLIC	??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ ; `string'
PUBLIC	??_C@_04CEJDCDCH@test?$AA@			; `string'
PUBLIC	??_C@_0BK@CICCHOKE@res?1Shaders?1BasicFrag?4sdr?$AA@ ; `string'
PUBLIC	??_C@_0BK@CBOIPCIB@res?1Shaders?1BasicVert?4sdr?$AA@ ; `string'
PUBLIC	??_C@_0N@BKCPJGKD@m_Projection?$AA@		; `string'
PUBLIC	??_C@_0M@PFEJEGL@m_Transform?$AA@		; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ ; `string'
PUBLIC	??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@	; `string'
PUBLIC	??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BA@MPNBGJJP@_Ptr?5?$CB?$DN?5nullptr?$AA@	; `string'
PUBLIC	??_C@_1CO@DCCKKOEA@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ ; `string'
PUBLIC	??_C@_1FK@PMIPGFGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA_?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AA1?$AA?$DO@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@	; `string'
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3f800000
PUBLIC	__real@3fa66666
PUBLIC	__real@3fe38e39
PUBLIC	__real@41200000
PUBLIC	__real@42340000
PUBLIC	__real@bf800000
PUBLIC	__real@c0a00000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp__glClear@4:PROC
EXTRN	__imp__glDrawElements@16:PROC
EXTRN	__imp__glEnable@4:PROC
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_glfwWindowShouldClose:PROC
EXTRN	_glfwPollEvents:PROC
EXTRN	_glfwSwapBuffers:PROC
EXTRN	_glfwSwapInterval:PROC
EXTRN	?createWindow@Window@Engine@@SAPAV12@HHPBD@Z:PROC ; Engine::Window::createWindow
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_strlen:PROC
EXTRN	__imp___CrtDbgReportW:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	??0Vec3f@Math@Engine@@QAE@MMM@Z:PROC		; Engine::Math::Vec3f::Vec3f
EXTRN	?Identity@Mat4f@Math@Engine@@SA?AV123@XZ:PROC	; Engine::Math::Mat4f::Identity
EXTRN	?translate@Mat4f@Math@Engine@@SA?AV123@ABUVec3f@23@@Z:PROC ; Engine::Math::Mat4f::translate
EXTRN	?rotate@Mat4f@Math@Engine@@SA?AV123@ABUVec3f@23@ABM@Z:PROC ; Engine::Math::Mat4f::rotate
EXTRN	??XMat4f@Math@Engine@@QAEAAV012@ABV012@@Z:PROC	; Engine::Math::Mat4f::operator*=
EXTRN	?Perspective@Mat4f@Math@Engine@@SA?AV123@MMMM@Z:PROC ; Engine::Math::Mat4f::Perspective
EXTRN	??0Shader@Graphics@Engine@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z:PROC ; Engine::Graphics::Shader::Shader
EXTRN	??1Shader@Graphics@Engine@@QAE@XZ:PROC		; Engine::Graphics::Shader::~Shader
EXTRN	?setUniformMat4@Shader@Graphics@Engine@@QAEXPBDVMat4f@Math@3@@Z:PROC ; Engine::Graphics::Shader::setUniformMat4
EXTRN	?bind@Shader@Graphics@Engine@@QAEXXZ:PROC	; Engine::Graphics::Shader::bind
EXTRN	??0Buffer@Graphics@Engine@@QAE@PAMI@Z:PROC	; Engine::Graphics::Buffer::Buffer
EXTRN	??1Buffer@Graphics@Engine@@QAE@XZ:PROC		; Engine::Graphics::Buffer::~Buffer
EXTRN	?bind@Buffer@Graphics@Engine@@QBEXXZ:PROC	; Engine::Graphics::Buffer::bind
EXTRN	??0IndexBuffer@Graphics@Engine@@QAE@PAII@Z:PROC	; Engine::Graphics::IndexBuffer::IndexBuffer
EXTRN	??1IndexBuffer@Graphics@Engine@@QAE@XZ:PROC	; Engine::Graphics::IndexBuffer::~IndexBuffer
EXTRN	?bind@IndexBuffer@Graphics@Engine@@QBEXXZ:PROC	; Engine::Graphics::IndexBuffer::bind
EXTRN	?pushFloats@VertexBufferLayout@Graphics@Engine@@QAEXI@Z:PROC ; Engine::Graphics::VertexBufferLayout::pushFloats
EXTRN	??0VertexArray@Graphics@Engine@@QAE@XZ:PROC	; Engine::Graphics::VertexArray::VertexArray
EXTRN	??1VertexArray@Graphics@Engine@@QAE@XZ:PROC	; Engine::Graphics::VertexArray::~VertexArray
EXTRN	?addBuffer@VertexArray@Graphics@Engine@@QAEXAAVBuffer@23@VVertexBufferLayout@23@@Z:PROC ; Engine::Graphics::VertexArray::addBuffer
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@c0a00000
CONST	SEGMENT
__real@c0a00000 DD 0c0a00000r			; -5
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@42340000
CONST	SEGMENT
__real@42340000 DD 042340000r			; 45
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@3fe38e39
CONST	SEGMENT
__real@3fe38e39 DD 03fe38e39r			; 1.77778
CONST	ENDS
;	COMDAT __real@3fa66666
CONST	SEGMENT
__real@3fa66666 DD 03fa66666r			; 1.3
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FK@PMIPGFGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA_?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AA1?$AA?$DO@
CONST	SEGMENT
??_C@_1FK@PMIPGFGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA_?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AA1?$AA?$DO@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'f', 00H, 'a', 00H, 'u', 00H, 'l', 00H, 't', 00H, '_'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, '_', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'i'
	DB	00H, 't', 00H, 's', 00H, '<', 00H, '1', 00H, '>', 00H, ':', 00H
	DB	':', 00H, '_', 00H, 'G', 00H, 'e', 00H, 't', 00H, '_', 00H, 'b'
	DB	00H, 'y', 00H, 't', 00H, 'e', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@DCCKKOEA@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1CO@DCCKKOEA@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'p'
	DB	00H, 't', 00H, 'r', 00H, '"', 00H, ' ', 00H, '&', 00H, '&', 00H
	DB	' ', 00H, '0', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MPNBGJJP@_Ptr?5?$CB?$DN?5nullptr?$AA@
CONST	SEGMENT
??_C@_0BA@MPNBGJJP@_Ptr?5?$CB?$DN?5nullptr?$AA@ DB '_Ptr != nullptr', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
CONST	SEGMENT
??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@ DB '%', 00H, 'l', 00H, 's', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@ DB '"'
	DB	00H, '_', 00H, 'P', 00H, 't', 00H, 'r', 00H, '_', 00H, 'c', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, 'r', 00H, ' ', 00H, '!', 00H, '=', 00H, ' ', 00H, '0', 00H
	DB	'"', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '0', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
CONST	SEGMENT
??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@ DB '_Ptr_container !='
	DB	' 0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PFEJEGL@m_Transform?$AA@
CONST	SEGMENT
??_C@_0M@PFEJEGL@m_Transform?$AA@ DB 'm_Transform', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BKCPJGKD@m_Projection?$AA@
CONST	SEGMENT
??_C@_0N@BKCPJGKD@m_Projection?$AA@ DB 'm_Projection', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CBOIPCIB@res?1Shaders?1BasicVert?4sdr?$AA@
CONST	SEGMENT
??_C@_0BK@CBOIPCIB@res?1Shaders?1BasicVert?4sdr?$AA@ DB 'res/Shaders/Basi'
	DB	'cVert.sdr', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CICCHOKE@res?1Shaders?1BasicFrag?4sdr?$AA@
CONST	SEGMENT
??_C@_0BK@CICCHOKE@res?1Shaders?1BasicFrag?4sdr?$AA@ DB 'res/Shaders/Basi'
	DB	'cFrag.sdr', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04CEJDCDCH@test?$AA@
CONST	SEGMENT
??_C@_04CEJDCDCH@test?$AA@ DB 'test', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
CONST	SEGMENT
??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a'
	DB	00H, 't', 00H, 'e', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@MDINKKAA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
CONST	SEGMENT
??_C@_1NE@MDINKKAA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'p', 00H, 'r', 00H
	DB	'i', 00H, 's', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\'
	DB	00H, 't', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'm', 00H, 's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '1', 00H, '2', 00H, '.', 00H, '2', 00H, '5', 00H
	DB	'8', 00H, '2', 00H, '7', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, '0'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Deallocate@std@@YAXPAXIII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Deallocate@std@@YAXPAXIII@Z@4JA DD 08fH ; `std::_Deallocate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z$0
__ehfuncinfo$??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$_main DD 019930522H
	DD	09H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
	DD	00H
	DD	FLAT:__unwindfunclet$_main$1
	DD	01H
	DD	FLAT:__unwindfunclet$_main$2
	DD	00H
	DD	FLAT:__unwindfunclet$_main$2
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$_main$2
	DD	04H
	DD	FLAT:__unwindfunclet$_main$3
	DD	05H
	DD	FLAT:__unwindfunclet$_main$4
	DD	06H
	DD	FLAT:__unwindfunclet$_main$5
	DD	07H
	DD	FLAT:__unwindfunclet$_main$6
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z$0
__tryblocktable$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z$3
__unwindtable$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$0
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0
__ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ??$_Copy_memmove@PAUBufferElement@Graphics@Engine@@PAU123@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00@Z
_TEXT	SEGMENT
__Count$ = -44						; size = 4
__Dest_ch$ = -32					; size = 4
__Last_ch$ = -20					; size = 4
__First_ch$ = -8					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Copy_memmove@PAUBufferElement@Graphics@Engine@@PAU123@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00@Z PROC ; std::_Copy_memmove<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *>, COMDAT

; 2375 : 	{	// implement copy-like function as memmove

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00012	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2376 : 	const char * const _First_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_First));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	89 45 f8	 mov	 DWORD PTR __First_ch$[ebp], eax

; 2377 : 	const char * const _Last_ch = const_cast<const char *>(reinterpret_cast<const volatile char *>(_Last));

  00024	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00027	89 45 ec	 mov	 DWORD PTR __Last_ch$[ebp], eax

; 2378 : 	char * const _Dest_ch = const_cast<char *>(reinterpret_cast<volatile char *>(_Dest));

  0002a	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0002d	89 45 e0	 mov	 DWORD PTR __Dest_ch$[ebp], eax

; 2379 : 	const size_t _Count = _Last_ch - _First_ch;

  00030	8b 45 ec	 mov	 eax, DWORD PTR __Last_ch$[ebp]
  00033	2b 45 f8	 sub	 eax, DWORD PTR __First_ch$[ebp]
  00036	89 45 d4	 mov	 DWORD PTR __Count$[ebp], eax

; 2380 : 	_CSTD memmove(_Dest_ch, _First_ch, _Count);

  00039	8b 45 d4	 mov	 eax, DWORD PTR __Count$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR __First_ch$[ebp]
  00040	51		 push	 ecx
  00041	8b 55 e0	 mov	 edx, DWORD PTR __Dest_ch$[ebp]
  00044	52		 push	 edx
  00045	e8 00 00 00 00	 call	 _memmove
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2381 : 	return (reinterpret_cast<_OutIt>(_Dest_ch + _Count));

  0004d	8b 45 e0	 mov	 eax, DWORD PTR __Dest_ch$[ebp]
  00050	03 45 d4	 add	 eax, DWORD PTR __Count$[ebp]

; 2382 : 	}

  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx
  00056	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0005c	3b ec		 cmp	 ebp, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
??$_Copy_memmove@PAUBufferElement@Graphics@Engine@@PAU123@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00@Z ENDP ; std::_Copy_memmove<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ??$_Rechecked@PAUBufferElement@Graphics@Engine@@PAU123@@std@@YAAAPAUBufferElement@Graphics@Engine@@AAPAU123@PAU123@@Z
_TEXT	SEGMENT
__Dest$ = 8						; size = 4
__Src$ = 12						; size = 4
??$_Rechecked@PAUBufferElement@Graphics@Engine@@PAU123@@std@@YAAAPAUBufferElement@Graphics@Engine@@AAPAU123@PAU123@@Z PROC ; std::_Rechecked<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *>, COMDAT

; 489  : 	{	// reset checked from unchecked, generic

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 490  : 	_Dest = _Src;

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Src$[ebp]
  00024	89 08		 mov	 DWORD PTR [eax], ecx

; 491  : 	return (_Dest);

  00026	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]

; 492  : 	}

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$_Rechecked@PAUBufferElement@Graphics@Engine@@PAU123@@std@@YAAAPAUBufferElement@Graphics@Engine@@AAPAU123@PAU123@@Z ENDP ; std::_Rechecked<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@UBufferElement@Graphics@Engine@@U123@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00AAV?$allocator@UBufferElement@Graphics@Engine@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_copy_al_unchecked@UBufferElement@Graphics@Engine@@U123@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00AAV?$allocator@UBufferElement@Graphics@Engine@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<Engine::Graphics::BufferElement,Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >, COMDAT

; 108  : 	{	// copy [_First, _Last) to raw _Dest, using default _Alloc construct, memmove optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 109  : 	return (_Copy_memmove(_First, _Last, _Dest));

  0001e	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ??$_Copy_memmove@PAUBufferElement@Graphics@Engine@@PAU123@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00@Z ; std::_Copy_memmove<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *>
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 110  : 	}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
??$_Uninitialized_copy_al_unchecked@UBufferElement@Graphics@Engine@@U123@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00AAV?$allocator@UBufferElement@Graphics@Engine@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<Engine::Graphics::BufferElement,Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ??$_Ptr_copy_cat@UBufferElement@Graphics@Engine@@U123@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUBufferElement@Graphics@Engine@@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
??$_Ptr_copy_cat@UBufferElement@Graphics@Engine@@U123@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUBufferElement@Graphics@Engine@@0@Z PROC ; std::_Ptr_copy_cat<Engine::Graphics::BufferElement,Engine::Graphics::BufferElement>, COMDAT

; 946  : 	{	// return pointer copy optimization category for pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 947  : 	return {};

  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 948  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Ptr_copy_cat@UBufferElement@Graphics@Engine@@U123@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUBufferElement@Graphics@Engine@@0@Z ENDP ; std::_Ptr_copy_cat<Engine::Graphics::BufferElement,Engine::Graphics::BufferElement>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ??$_Unchecked@PAUBufferElement@Graphics@Engine@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
??$_Unchecked@PAUBufferElement@Graphics@Engine@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@@Z PROC ; std::_Unchecked<Engine::Graphics::BufferElement *>, COMDAT

; 458  : 	{	// construct unchecked from checked, generic

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 459  : 	return (_Src);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]

; 460  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unchecked@PAUBufferElement@Graphics@Engine@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@@Z ENDP ; std::_Unchecked<Engine::Graphics::BufferElement *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAXPAUBufferElement@Graphics@Engine@@0AAV?$allocator@UBufferElement@Graphics@Engine@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAXPAUBufferElement@Graphics@Engine@@0AAV?$allocator@UBufferElement@Graphics@Engine@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<Engine::Graphics::BufferElement> >, COMDAT

; 1200 : 	{	// destroy [_First, _Last), trivially destructible and default destroy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1201 : 		// nothing to do
; 1202 : 	}

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$_Destroy_range1@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAXPAUBufferElement@Graphics@Engine@@0AAV?$allocator@UBufferElement@Graphics@Engine@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<Engine::Graphics::BufferElement> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\type_traits
;	COMDAT ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z PROC ; std::forward<std::_Container_proxy>, COMDAT

; 1537 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1538 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1539 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ENDP ; std::forward<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?_Get_bytes@?$_Default_allocate_traits@$00@std@@SAPAXII@Z
_TEXT	SEGMENT
__Ptr$ = -8						; size = 4
__Bytes$ = 8						; size = 4
__Align$ = 12						; size = 4
?_Get_bytes@?$_Default_allocate_traits@$00@std@@SAPAXII@Z PROC ; std::_Default_allocate_traits<1>::_Get_bytes, COMDAT

; 55   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 56   : 		(void)_Align;
; 57   : 
; 58   : 		void * _Ptr = nullptr;

  0001e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __Ptr$[ebp], 0

; 59   :  #if _HAS_ALIGNED_NEW // TRANSITION, if constexpr
; 60   : 		if (_Align > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
; 61   : 			{
; 62   : 			_Ptr = ::operator new(_Bytes, align_val_t{_Align});
; 63   : 			}
; 64   : 		else
; 65   :  #endif /* _HAS_ALIGNED_NEW */
; 66   : 			{
; 67   : 			_Ptr = ::operator new(_Bytes);

  00025	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002e	83 c4 04	 add	 esp, 4
  00031	89 45 f8	 mov	 DWORD PTR __Ptr$[ebp], eax

; 68   : 			}
; 69   : 
; 70   : 		_SCL_SECURE_ALWAYS_VALIDATE(_Ptr != nullptr);

  00034	83 7d f8 00	 cmp	 DWORD PTR __Ptr$[ebp], 0
  00038	75 5f		 jne	 SHORT $LN2@Get_bytes
  0003a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BA@MPNBGJJP@_Ptr?5?$CB?$DN?5nullptr?$AA@
  0003f	85 c0		 test	 eax, eax
  00041	74 04		 je	 SHORT $LN4@Get_bytes
  00043	33 c9		 xor	 ecx, ecx
  00045	75 2d		 jne	 SHORT $LN5@Get_bytes
$LN4@Get_bytes:
  00047	8b f4		 mov	 esi, esp
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_1CO@DCCKKOEA@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAu?$AAl?$AAl?$AAp?$AAt?$AAr?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  00053	6a 00		 push	 0
  00055	6a 46		 push	 70			; 00000046H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@MDINKKAA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0005c	6a 02		 push	 2
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  00064	83 c4 18	 add	 esp, 24			; 00000018H
  00067	3b f4		 cmp	 esi, esp
  00069	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006e	83 f8 01	 cmp	 eax, 1
  00071	75 01		 jne	 SHORT $LN5@Get_bytes
  00073	cc		 int	 3
$LN5@Get_bytes:
  00074	8b f4		 mov	 esi, esp
  00076	6a 00		 push	 0
  00078	6a 46		 push	 70			; 00000046H
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@MDINKKAA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_1FK@PMIPGFGC@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA_?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_?$AAt?$AAr?$AAa?$AAi?$AAt?$AAs?$AA?$DM?$AA1?$AA?$DO@
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  00089	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0008f	83 c4 14	 add	 esp, 20			; 00000014H
  00092	3b f4		 cmp	 esi, esp
  00094	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@Get_bytes:

; 71   : 		return (_Ptr);

  00099	8b 45 f8	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 72   : 		}

  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx
  0009f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000a5	3b ec		 cmp	 ebp, esp
  000a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c3		 ret	 0
?_Get_bytes@?$_Default_allocate_traits@$00@std@@SAPAXII@Z ENDP ; std::_Default_allocate_traits<1>::_Get_bytes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?_Fail@?$_Default_allocate_traits@$00@std@@SAXXZ
_TEXT	SEGMENT
?_Fail@?$_Default_allocate_traits@$00@std@@SAXXZ PROC	; std::_Default_allocate_traits<1>::_Fail, COMDAT

; 50   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 51   : 		_Xbad_alloc();

  0001e	e8 00 00 00 00	 call	 ?_Xbad_alloc@std@@YAXXZ	; std::_Xbad_alloc
$LN2@Fail:

; 52   : 		}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002c	3b ec		 cmp	 ebp, esp
  0002e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c3		 ret	 0
?_Fail@?$_Default_allocate_traits@$00@std@@SAXXZ ENDP	; std::_Default_allocate_traits<1>::_Fail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\type_traits
;	COMDAT ??$forward@ABQAD@std@@YAABQADABQAD@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAD@std@@YAABQADABQAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1537 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1538 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1539 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@ABQAD@std@@YAABQADABQAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAUBufferElement@Graphics@Engine@@PAU123@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00AAV?$allocator@UBufferElement@Graphics@Engine@@@0@@Z
_TEXT	SEGMENT
$T1 = -249						; size = 1
$T2 = -237						; size = 1
__UDest$ = -36						; size = 4
__ULast$ = -24						; size = 4
__UFirst$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAUBufferElement@Graphics@Engine@@PAU123@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00AAV?$allocator@UBufferElement@Graphics@Engine@@@0@@Z PROC ; std::_Uninitialized_copy<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *,std::allocator<Engine::Graphics::BufferElement> >, COMDAT

; 116  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 00 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-256]
  00012	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 117  : 		// note: only called internally from elsewhere in the STL, debug checks
; 118  : 		// and deprecation warnings omitted
; 119  : 	const auto _UFirst = _Unchecked(_First);

  00028	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Unchecked@PAUBufferElement@Graphics@Engine@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@@Z ; std::_Unchecked<Engine::Graphics::BufferElement *>
  00031	83 c4 04	 add	 esp, 4
  00034	89 45 f4	 mov	 DWORD PTR __UFirst$[ebp], eax

; 120  : 	const auto _ULast = _Unchecked(_Last);

  00037	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ??$_Unchecked@PAUBufferElement@Graphics@Engine@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@@Z ; std::_Unchecked<Engine::Graphics::BufferElement *>
  00040	83 c4 04	 add	 esp, 4
  00043	89 45 e8	 mov	 DWORD PTR __ULast$[ebp], eax

; 121  : 	const auto _UDest = _Unchecked(_Dest);

  00046	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00049	50		 push	 eax
  0004a	e8 00 00 00 00	 call	 ??$_Unchecked@PAUBufferElement@Graphics@Engine@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@@Z ; std::_Unchecked<Engine::Graphics::BufferElement *>
  0004f	83 c4 04	 add	 esp, 4
  00052	89 45 dc	 mov	 DWORD PTR __UDest$[ebp], eax

; 122  : 	return (_Rechecked(_Dest,

  00055	0f b6 85 13 ff
	ff ff		 movzx	 eax, BYTE PTR $T2[ebp]
  0005c	50		 push	 eax
  0005d	8d 4d dc	 lea	 ecx, DWORD PTR __UDest$[ebp]
  00060	51		 push	 ecx
  00061	8d 55 f4	 lea	 edx, DWORD PTR __UFirst$[ebp]
  00064	52		 push	 edx
  00065	8d 85 07 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ??$_Ptr_copy_cat@UBufferElement@Graphics@Engine@@U123@@std@@YA?AU_Really_trivial_ptr_iterator_tag@0@ABQAUBufferElement@Graphics@Engine@@0@Z ; std::_Ptr_copy_cat<Engine::Graphics::BufferElement,Engine::Graphics::BufferElement>
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
  00074	8a 08		 mov	 cl, BYTE PTR [eax]
  00076	0f b6 d1	 movzx	 edx, cl
  00079	52		 push	 edx
  0007a	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  0007d	50		 push	 eax
  0007e	8b 4d dc	 mov	 ecx, DWORD PTR __UDest$[ebp]
  00081	51		 push	 ecx
  00082	8b 55 e8	 mov	 edx, DWORD PTR __ULast$[ebp]
  00085	52		 push	 edx
  00086	8b 45 f4	 mov	 eax, DWORD PTR __UFirst$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_al_unchecked@UBufferElement@Graphics@Engine@@U123@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00AAV?$allocator@UBufferElement@Graphics@Engine@@@0@U_Really_trivial_ptr_iterator_tag@0@U?$integral_constant@_N$00@0@@Z ; std::_Uninitialized_copy_al_unchecked<Engine::Graphics::BufferElement,Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
  0008f	83 c4 18	 add	 esp, 24			; 00000018H
  00092	50		 push	 eax
  00093	8d 4d 10	 lea	 ecx, DWORD PTR __Dest$[ebp]
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ??$_Rechecked@PAUBufferElement@Graphics@Engine@@PAU123@@std@@YAAAPAUBufferElement@Graphics@Engine@@AAPAU123@PAU123@@Z ; std::_Rechecked<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *>
  0009c	83 c4 08	 add	 esp, 8
  0009f	8b 00		 mov	 eax, DWORD PTR [eax]

; 123  : 		_Uninitialized_copy_al_unchecked(_UFirst, _ULast, _UDest, _Al,
; 124  : 			_Ptr_copy_cat(_UFirst, _UDest),
; 125  : 			_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_UDest)), decltype(*_UFirst)>())));
; 126  : 	}

  000a1	52		 push	 edx
  000a2	8b cd		 mov	 ecx, ebp
  000a4	50		 push	 eax
  000a5	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@Uninitiali
  000ab	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b0	58		 pop	 eax
  000b1	5a		 pop	 edx
  000b2	5f		 pop	 edi
  000b3	5e		 pop	 esi
  000b4	5b		 pop	 ebx
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b8	33 cd		 xor	 ecx, ebp
  000ba	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bf	81 c4 00 01 00
	00		 add	 esp, 256		; 00000100H
  000c5	3b ec		 cmp	 ebp, esp
  000c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c3		 ret	 0
$LN6@Uninitiali:
  000d0	02 00 00 00	 DD	 2
  000d4	00 00 00 00	 DD	 $LN5@Uninitiali
$LN5@Uninitiali:
  000d8	f4 ff ff ff	 DD	 -12			; fffffff4H
  000dc	04 00 00 00	 DD	 4
  000e0	00 00 00 00	 DD	 $LN3@Uninitiali
  000e4	dc ff ff ff	 DD	 -36			; ffffffdcH
  000e8	04 00 00 00	 DD	 4
  000ec	00 00 00 00	 DD	 $LN4@Uninitiali
$LN4@Uninitiali:
  000f0	5f		 DB	 95			; 0000005fH
  000f1	55		 DB	 85			; 00000055H
  000f2	44		 DB	 68			; 00000044H
  000f3	65		 DB	 101			; 00000065H
  000f4	73		 DB	 115			; 00000073H
  000f5	74		 DB	 116			; 00000074H
  000f6	00		 DB	 0
$LN3@Uninitiali:
  000f7	5f		 DB	 95			; 0000005fH
  000f8	55		 DB	 85			; 00000055H
  000f9	46		 DB	 70			; 00000046H
  000fa	69		 DB	 105			; 00000069H
  000fb	72		 DB	 114			; 00000072H
  000fc	73		 DB	 115			; 00000073H
  000fd	74		 DB	 116			; 00000074H
  000fe	00		 DB	 0
??$_Uninitialized_copy@PAUBufferElement@Graphics@Engine@@PAU123@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00AAV?$allocator@UBufferElement@Graphics@Engine@@@0@@Z ENDP ; std::_Uninitialized_copy<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *,std::allocator<Engine::Graphics::BufferElement> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@$$V@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@$$V@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1><std::allocator<Engine::Graphics::BufferElement> >, COMDAT
; _this$ = ecx

; 319  : 		: _Ty1(_STD forward<_Other1>(_Val1)),

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 0c	 mov	 eax, DWORD PTR __Val1$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ??$forward@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YA$$QAV?$allocator@UBufferElement@Graphics@Engine@@@0@AAV10@@Z ; std::forward<std::allocator<Engine::Graphics::BufferElement> >
  0002c	83 c4 04	 add	 esp, 4

; 320  : 			_Myval2(_STD forward<_Other2>(_Val2)...)

  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >

; 321  : 		{	// construct from forwarded values
; 322  : 		}

  00037	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 08 00	 ret	 8
??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@$$V@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1><std::allocator<Engine::Graphics::BufferElement> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\type_traits
;	COMDAT ??$forward@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YA$$QAV?$allocator@UBufferElement@Graphics@Engine@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YA$$QAV?$allocator@UBufferElement@Graphics@Engine@@@0@AAV10@@Z PROC ; std::forward<std::allocator<Engine::Graphics::BufferElement> >, COMDAT

; 1537 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1538 : 	return (static_cast<_Ty&&>(_Arg));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1539 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$forward@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YA$$QAV?$allocator@UBufferElement@Graphics@Engine@@@0@AAV10@@Z ENDP ; std::forward<std::allocator<Engine::Graphics::BufferElement> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx

; 1045 : 		{	// construct from a related allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1046 : 		}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAXPAUBufferElement@Graphics@Engine@@0AAV?$allocator@UBufferElement@Graphics@Engine@@@0@@Z
_TEXT	SEGMENT
$T1 = -197						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAXPAUBufferElement@Graphics@Engine@@0AAV?$allocator@UBufferElement@Graphics@Engine@@@0@@Z PROC ; std::_Destroy_range<std::allocator<Engine::Graphics::BufferElement> >, COMDAT

; 1209 : 	{	// destroy [_First, _Last), choose optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1210 : 		// note that this is an optimization for debug mode codegen;
; 1211 : 		// in release mode the BE removes all of this
; 1212 : 	using _Val = typename _Alloc::value_type;
; 1213 : 	_Destroy_range1(_First, _Last, _Al, _Conjunction_t<

  0001e	0f b6 85 3b ff
	ff ff		 movzx	 eax, BYTE PTR $T1[ebp]
  00025	50		 push	 eax
  00026	8b 4d 10	 mov	 ecx, DWORD PTR __Al$[ebp]
  00029	51		 push	 ecx
  0002a	8b 55 0c	 mov	 edx, DWORD PTR __Last$[ebp]
  0002d	52		 push	 edx
  0002e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Destroy_range1@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAXPAUBufferElement@Graphics@Engine@@0AAV?$allocator@UBufferElement@Graphics@Engine@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<Engine::Graphics::BufferElement> >
  00037	83 c4 10	 add	 esp, 16			; 00000010H

; 1214 : 		is_trivially_destructible<_Val>,
; 1215 : 		_Uses_default_destroy<_Alloc, _Val *>>());
; 1216 : 	}

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00043	3b ec		 cmp	 ebp, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
??$_Destroy_range@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAXPAUBufferElement@Graphics@Engine@@0AAV?$allocator@UBufferElement@Graphics@Engine@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<Engine::Graphics::BufferElement> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> > >, COMDAT

; 248  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 249  : 	return (__builtin_addressof(_Val));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 250  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>, COMDAT

; 943  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 08		 push	 8
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 85 38 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00032	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$forward@U_Container_proxy@std@@@std@@YA$$QAU_Container_proxy@0@AAU10@@Z ; std::forward<std::_Container_proxy>
  0003b	83 c4 04	 add	 esp, 4
  0003e	8b 10		 mov	 edx, DWORD PTR [eax]
  00040	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00043	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  00049	89 11		 mov	 DWORD PTR [ecx], edx
  0004b	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 944  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))
; 945  : 			_Objty(_STD forward<_Types>(_Args)...);
; 946  : 		}

  0004e	5f		 pop	 edi
  0004f	5e		 pop	 esi
  00050	5b		 pop	 ebx
  00051	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00057	3b ec		 cmp	 ebp, esp
  00059	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 264  : 	{	// do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 265  : 	return (_Ptr);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 266  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>, COMDAT

; 1317 : 	{	// deallocate a plain pointer using an allocator, non-fancy pointers special case

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1318 : 	allocator_traits<_Alloc>::deallocate(_Al, _Ptr, 1);

  0001e	6a 01		 push	 1
  00020	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 08	 mov	 ecx, DWORD PTR __Al$[ebp]
  00027	51		 push	 ecx
  00028	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  0002d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1319 : 	}

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00039	3b ec		 cmp	 ebp, esp
  0003b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00040	8b e5		 mov	 esp, ebp
  00042	5d		 pop	 ebp
  00043	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>, COMDAT

; 950  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 951  : 		_Ptr->~_Uty();
; 952  : 		}

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 936  : 		{	// deallocate _Count elements at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 937  : 		_Deallocate(_Ptr, _Count, sizeof(value_type), alignof(value_type));

  0001e	6a 04		 push	 4
  00020	6a 08		 push	 8
  00022	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00025	50		 push	 eax
  00026	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 ?_Deallocate@std@@YAXPAXIII@Z ; std::_Deallocate
  0002f	83 c4 10	 add	 esp, 16			; 00000010H

; 938  : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??$?0UBufferElement@Graphics@Engine@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 4
??$?0UBufferElement@Graphics@Engine@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Engine::Graphics::BufferElement>, COMDAT
; _this$ = ecx

; 1045 : 		{	// construct from a related allocator (do nothing)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1046 : 		}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c2 04 00	 ret	 4
??$?0UBufferElement@Graphics@Engine@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Engine::Graphics::BufferElement>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 1054 : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1055 : 		return (static_cast<_Ty *>(_Allocate(_Count, sizeof(_Ty), alignof(_Ty))));

  00023	6a 04		 push	 4
  00025	6a 08		 push	 8
  00027	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??$_Allocate@U?$_Default_allocate_traits@$00@std@@@std@@YAPAXIII@Z ; std::_Allocate<std::_Default_allocate_traits<1> >
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1056 : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??$_Allocate@U?$_Default_allocate_traits@$00@std@@@std@@YAPAXIII@Z
_TEXT	SEGMENT
__Ptr$1 = -44						; size = 4
__Ptr_container$2 = -32					; size = 4
__Block_size$3 = -20					; size = 4
__User_size$ = -8					; size = 4
__Count$ = 8						; size = 4
__Sz$ = 12						; size = 4
__Align$ = 16						; size = 4
??$_Allocate@U?$_Default_allocate_traits@$00@std@@@std@@YAPAXIII@Z PROC ; std::_Allocate<std::_Default_allocate_traits<1> >, COMDAT

; 77   : 	{	// allocate storage for _Count elements of size _Sz with alignment _Align

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00012	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 78   : 	if (_Count == 0)

  0001e	83 7d 08 00	 cmp	 DWORD PTR __Count$[ebp], 0
  00022	75 07		 jne	 SHORT $LN2@Allocate

; 79   : 		{
; 80   : 		return (nullptr);

  00024	33 c0		 xor	 eax, eax
  00026	e9 04 01 00 00	 jmp	 $LN7@Allocate
$LN2@Allocate:

; 81   : 		}
; 82   : 
; 83   : 	// check overflow of multiply
; 84   : 	if (static_cast<size_t>(-1) / _Sz < _Count)

  0002b	83 c8 ff	 or	 eax, -1
  0002e	33 d2		 xor	 edx, edx
  00030	f7 75 0c	 div	 DWORD PTR __Sz$[ebp]
  00033	3b 45 08	 cmp	 eax, DWORD PTR __Count$[ebp]
  00036	73 05		 jae	 SHORT $LN3@Allocate

; 85   : 		{
; 86   : 		_Traits::_Fail();	// report no memory

  00038	e8 00 00 00 00	 call	 ?_Fail@?$_Default_allocate_traits@$00@std@@SAXXZ ; std::_Default_allocate_traits<1>::_Fail
$LN3@Allocate:

; 87   : 		}
; 88   : 
; 89   : 	const size_t _User_size = _Count * _Sz;

  0003d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00040	0f af 45 0c	 imul	 eax, DWORD PTR __Sz$[ebp]
  00044	89 45 f8	 mov	 DWORD PTR __User_size$[ebp], eax

; 90   : 
; 91   : #if defined(_M_IX86) || defined(_M_X64)
; 92   : 	// Boost the alignment of big allocations to help autovectorization.
; 93   :  #pragma warning(push)
; 94   :  #pragma warning(disable: 4127) // conditional expression is constant
; 95   :  #pragma warning(disable: 6326) // Potential comparison of a constant with another constant
; 96   : 	if (_Traits::_Try_aligned_allocation && _User_size >= _Big_allocation_threshold)

  00047	b8 01 00 00 00	 mov	 eax, 1
  0004c	85 c0		 test	 eax, eax
  0004e	0f 84 cb 00 00
	00		 je	 $LN4@Allocate
  00054	81 7d f8 00 10
	00 00		 cmp	 DWORD PTR __User_size$[ebp], 4096 ; 00001000H
  0005b	0f 82 be 00 00
	00		 jb	 $LN4@Allocate

; 97   : 		{
; 98   :  #if _HAS_ALIGNED_NEW // TRANSITION, if constexpr
; 99   : 		if (_Align > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
; 100  : 			{	// allocation will use aligned new
; 101  : 			if /* constexpr */ (__STDCPP_DEFAULT_NEW_ALIGNMENT__ * 2 >= _Big_allocation_alignment)
; 102  : 				{	// There are no valid alignments between __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 103  : 					// and _Big_allocation_alignment; the below conditional is dead.
; 104  : 				}
; 105  : 			else
; 106  : 				{
; 107  : 				if (_Align < _Big_allocation_alignment)
; 108  : 					{	// boost alignment
; 109  : 					_Align = _Big_allocation_alignment;
; 110  : 					}
; 111  : 				}
; 112  : 			}
; 113  : 		else
; 114  :  #endif /* _HAS_ALIGNED_NEW */
; 115  : 			{	// allocation will use unaligned new; boost alignment manually
; 116  : 			const size_t _Block_size = _Non_user_size + _User_size;

  00061	8b 45 f8	 mov	 eax, DWORD PTR __User_size$[ebp]
  00064	83 c0 27	 add	 eax, 39			; 00000027H
  00067	89 45 ec	 mov	 DWORD PTR __Block_size$3[ebp], eax

; 117  : 			if (_Block_size <= _User_size)

  0006a	8b 45 ec	 mov	 eax, DWORD PTR __Block_size$3[ebp]
  0006d	3b 45 f8	 cmp	 eax, DWORD PTR __User_size$[ebp]
  00070	77 05		 ja	 SHORT $LN5@Allocate

; 118  : 				{
; 119  : 				_Traits::_Fail();	// report no memory

  00072	e8 00 00 00 00	 call	 ?_Fail@?$_Default_allocate_traits@$00@std@@SAXXZ ; std::_Default_allocate_traits<1>::_Fail
$LN5@Allocate:

; 120  : 				}
; 121  : 
; 122  : 			const uintptr_t _Ptr_container =
; 123  : 				reinterpret_cast<uintptr_t>(::operator new(_Block_size));

  00077	8b 45 ec	 mov	 eax, DWORD PTR __Block_size$3[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00080	83 c4 04	 add	 esp, 4
  00083	89 45 e0	 mov	 DWORD PTR __Ptr_container$2[ebp], eax

; 124  : 			_SCL_SECURE_ALWAYS_VALIDATE(_Ptr_container != 0);

  00086	83 7d e0 00	 cmp	 DWORD PTR __Ptr_container$2[ebp], 0
  0008a	75 5f		 jne	 SHORT $LN6@Allocate
  0008c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0BE@LMNLACIC@_Ptr_container?5?$CB?$DN?50?$AA@
  00091	85 c0		 test	 eax, eax
  00093	74 04		 je	 SHORT $LN8@Allocate
  00095	33 c9		 xor	 ecx, ecx
  00097	75 2d		 jne	 SHORT $LN9@Allocate
$LN8@Allocate:
  00099	8b f4		 mov	 esi, esp
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_1DG@HGDKEBPG@?$AA?$CC?$AA_?$AAP?$AAt?$AAr?$AA_?$AAc?$AAo?$AAn?$AAt?$AAa?$AAi?$AAn?$AAe?$AAr?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0?$AA?$CC?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AA0?$AA?$AA@
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_17CNPHIMPH@?$AA?$CF?$AAl?$AAs?$AA?$AA@
  000a5	6a 00		 push	 0
  000a7	6a 7c		 push	 124			; 0000007cH
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@MDINKKAA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000ae	6a 02		 push	 2
  000b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReportW
  000b6	83 c4 18	 add	 esp, 24			; 00000018H
  000b9	3b f4		 cmp	 esi, esp
  000bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c0	83 f8 01	 cmp	 eax, 1
  000c3	75 01		 jne	 SHORT $LN9@Allocate
  000c5	cc		 int	 3
$LN9@Allocate:
  000c6	8b f4		 mov	 esi, esp
  000c8	6a 00		 push	 0
  000ca	6a 7c		 push	 124			; 0000007cH
  000cc	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@MDINKKAA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_1BO@NKFMJPA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  000db	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  000e1	83 c4 14	 add	 esp, 20			; 00000014H
  000e4	3b f4		 cmp	 esi, esp
  000e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@Allocate:

; 125  : 			void * const _Ptr = reinterpret_cast<void *>((_Ptr_container + _Non_user_size)
; 126  : 				& ~(_Big_allocation_alignment - 1));

  000eb	8b 45 e0	 mov	 eax, DWORD PTR __Ptr_container$2[ebp]
  000ee	83 c0 27	 add	 eax, 39			; 00000027H
  000f1	83 e0 e0	 and	 eax, -32		; ffffffe0H
  000f4	89 45 d4	 mov	 DWORD PTR __Ptr$1[ebp], eax

; 127  : 			static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  000f7	b8 04 00 00 00	 mov	 eax, 4
  000fc	6b c8 ff	 imul	 ecx, eax, -1
  000ff	8b 55 d4	 mov	 edx, DWORD PTR __Ptr$1[ebp]
  00102	8b 45 e0	 mov	 eax, DWORD PTR __Ptr_container$2[ebp]
  00105	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 128  : 
; 129  :  #ifdef _DEBUG
; 130  : 			static_cast<uintptr_t *>(_Ptr)[-2] = _Big_allocation_sentinel;

  00108	b8 04 00 00 00	 mov	 eax, 4
  0010d	6b c8 fe	 imul	 ecx, eax, -2
  00110	8b 55 d4	 mov	 edx, DWORD PTR __Ptr$1[ebp]
  00113	c7 04 0a fa fa
	fa fa		 mov	 DWORD PTR [edx+ecx], -84215046 ; fafafafaH

; 131  :  #endif /* _DEBUG */
; 132  : 			return (_Ptr);

  0011a	8b 45 d4	 mov	 eax, DWORD PTR __Ptr$1[ebp]
  0011d	eb 10		 jmp	 SHORT $LN7@Allocate
$LN4@Allocate:

; 133  : 			}
; 134  : 		}
; 135  :  #pragma warning(pop)
; 136  : #endif /* defined(_M_IX86) || defined(_M_X64) */
; 137  : 
; 138  : 	return (_Traits::_Get_bytes(_User_size, _Align));

  0011f	8b 45 10	 mov	 eax, DWORD PTR __Align$[ebp]
  00122	50		 push	 eax
  00123	8b 4d f8	 mov	 ecx, DWORD PTR __User_size$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ?_Get_bytes@?$_Default_allocate_traits@$00@std@@SAPAXII@Z ; std::_Default_allocate_traits<1>::_Get_bytes
  0012c	83 c4 08	 add	 esp, 8
$LN7@Allocate:

; 139  : 	}

  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx
  00132	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  00138	3b ec		 cmp	 ebp, esp
  0013a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0013f	8b e5		 mov	 esp, ebp
  00141	5d		 pop	 ebp
  00142	c3		 ret	 0
??$_Allocate@U?$_Default_allocate_traits@$00@std@@@std@@YAPAXIII@Z ENDP ; std::_Allocate<std::_Default_allocate_traits<1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 248  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 249  : 	return (__builtin_addressof(_Val));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 250  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??$construct@PADABQAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPADABQAD@Z
_TEXT	SEGMENT
$T1 = -200						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PADABQAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPADABQAD@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::construct<char *,char * const &>, COMDAT

; 943  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00021	50		 push	 eax
  00022	6a 04		 push	 4
  00024	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  00029	83 c4 08	 add	 esp, 8
  0002c	89 85 38 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00032	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00035	51		 push	 ecx
  00036	e8 00 00 00 00	 call	 ??$forward@ABQAD@std@@YAABQADABQAD@Z ; std::forward<char * const &>
  0003b	83 c4 04	 add	 esp, 4
  0003e	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR $T1[ebp]
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	89 02		 mov	 DWORD PTR [edx], eax

; 944  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))
; 945  : 			_Objty(_STD forward<_Types>(_Args)...);
; 946  : 		}

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00051	3b ec		 cmp	 ebp, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
??$construct@PADABQAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPADABQAD@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::construct<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z
_TEXT	SEGMENT
__New_ptr$ = -72					; size = 4
__Al$ = -60						; size = 4
__New_capacity$ = -48					; size = 4
__Old_capacity$ = -36					; size = 4
__My_data$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__New_size$ = 8						; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>, COMDAT
; _this$ = ecx

; 3594 : 		{	// reallocate to store exactly _New_size elements, new buffer prepared by

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00013	b9 43 00 00 00	 mov	 ecx, 67			; 00000043H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 3595 : 			// _Fn(_New_ptr, _New_size, _Args...)
; 3596 : 		if (_New_size > max_size())

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00035	39 45 08	 cmp	 DWORD PTR __New_size$[ebp], eax
  00038	76 05		 jbe	 SHORT $LN2@Reallocate

; 3597 : 			{
; 3598 : 			_Xlen();	// result too long

  0003a	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 3599 : 			}
; 3600 : 
; 3601 : 		auto& _My_data = this->_Get_data();

  0003f	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  00047	89 45 e8	 mov	 DWORD PTR __My_data$[ebp], eax

; 3602 : 		const size_type _Old_capacity = _My_data._Myres;

  0004a	8b 45 e8	 mov	 eax, DWORD PTR __My_data$[ebp]
  0004d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00050	89 4d dc	 mov	 DWORD PTR __Old_capacity$[ebp], ecx

; 3603 : 		const size_type _New_capacity = _Calculate_growth(_New_size);

  00053	8b 45 08	 mov	 eax, DWORD PTR __New_size$[ebp]
  00056	50		 push	 eax
  00057	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  0005f	89 45 d0	 mov	 DWORD PTR __New_capacity$[ebp], eax

; 3604 : 		auto& _Al = this->_Getal();

  00062	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00065	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$allocator@D@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  0006a	89 45 c4	 mov	 DWORD PTR __Al$[ebp], eax

; 3605 : 		const pointer _New_ptr = _Al.allocate(_New_capacity + 1); // throws

  0006d	33 c0		 xor	 eax, eax
  0006f	8b 4d d0	 mov	 ecx, DWORD PTR __New_capacity$[ebp]
  00072	83 c1 01	 add	 ecx, 1
  00075	0f 92 c0	 setb	 al
  00078	f7 d8		 neg	 eax
  0007a	0b c1		 or	 eax, ecx
  0007c	50		 push	 eax
  0007d	8b 4d c4	 mov	 ecx, DWORD PTR __Al$[ebp]
  00080	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QAEPADI@Z ; std::allocator<char>::allocate
  00085	89 45 b8	 mov	 DWORD PTR __New_ptr$[ebp], eax

; 3606 : 		_My_data._Orphan_all();

  00088	8b 4d e8	 mov	 ecx, DWORD PTR __My_data$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 3607 : 		_My_data._Mysize = _New_size;

  00090	8b 45 e8	 mov	 eax, DWORD PTR __My_data$[ebp]
  00093	8b 4d 08	 mov	 ecx, DWORD PTR __New_size$[ebp]
  00096	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 3608 : 		_My_data._Myres = _New_capacity;

  00099	8b 45 e8	 mov	 eax, DWORD PTR __My_data$[ebp]
  0009c	8b 4d d0	 mov	 ecx, DWORD PTR __New_capacity$[ebp]
  0009f	89 48 18	 mov	 DWORD PTR [eax+24], ecx

; 3609 : 		_Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000a2	8b 45 10	 mov	 eax, DWORD PTR _<_Args_0>$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d 08	 mov	 ecx, DWORD PTR __New_size$[ebp]
  000a9	51		 push	 ecx
  000aa	8b 55 b8	 mov	 edx, DWORD PTR __New_ptr$[ebp]
  000ad	52		 push	 edx
  000ae	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  000b3	83 c4 04	 add	 esp, 4
  000b6	50		 push	 eax
  000b7	8d 4d 0c	 lea	 ecx, DWORD PTR __Fn$[ebp]
  000ba	e8 00 00 00 00	 call	 ??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z ; <lambda_9366063389c5f42a00a5088cf24e69de>::operator()

; 3610 : 		if (this->_BUF_SIZE <= _Old_capacity)

  000bf	83 7d dc 10	 cmp	 DWORD PTR __Old_capacity$[ebp], 16 ; 00000010H
  000c3	72 21		 jb	 SHORT $LN3@Reallocate

; 3611 : 			{
; 3612 : 			_Al.deallocate(_My_data._Bx._Ptr, _Old_capacity + 1);

  000c5	8b 45 dc	 mov	 eax, DWORD PTR __Old_capacity$[ebp]
  000c8	83 c0 01	 add	 eax, 1
  000cb	50		 push	 eax
  000cc	8b 4d e8	 mov	 ecx, DWORD PTR __My_data$[ebp]
  000cf	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d2	52		 push	 edx
  000d3	8b 4d c4	 mov	 ecx, DWORD PTR __Al$[ebp]
  000d6	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate

; 3613 : 			_My_data._Bx._Ptr = _New_ptr;

  000db	8b 45 e8	 mov	 eax, DWORD PTR __My_data$[ebp]
  000de	8b 4d b8	 mov	 ecx, DWORD PTR __New_ptr$[ebp]
  000e1	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 3614 : 			}
; 3615 : 		else

  000e4	eb 20		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 3616 : 			{
; 3617 : 			_Alty_traits::construct(_Al, _STD addressof(_My_data._Bx._Ptr), _New_ptr);

  000e6	8d 45 b8	 lea	 eax, DWORD PTR __New_ptr$[ebp]
  000e9	50		 push	 eax
  000ea	8b 4d e8	 mov	 ecx, DWORD PTR __My_data$[ebp]
  000ed	83 c1 04	 add	 ecx, 4
  000f0	51		 push	 ecx
  000f1	e8 00 00 00 00	 call	 ??$addressof@PAD@std@@YAPAPADAAPAD@Z ; std::addressof<char *>
  000f6	83 c4 04	 add	 esp, 4
  000f9	50		 push	 eax
  000fa	8b 55 c4	 mov	 edx, DWORD PTR __Al$[ebp]
  000fd	52		 push	 edx
  000fe	e8 00 00 00 00	 call	 ??$construct@PADABQAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPADABQAD@Z ; std::_Default_allocator_traits<std::allocator<char> >::construct<char *,char * const &>
  00103	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@Reallocate:

; 3618 : 			}
; 3619 : 
; 3620 : 		return (*this);

  00106	8b 45 f4	 mov	 eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:

; 3621 : 		}

  00109	52		 push	 edx
  0010a	8b cd		 mov	 ecx, ebp
  0010c	50		 push	 eax
  0010d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN8@Reallocate
  00113	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00118	58		 pop	 eax
  00119	5a		 pop	 edx
  0011a	5f		 pop	 edi
  0011b	5e		 pop	 esi
  0011c	5b		 pop	 ebx
  0011d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00120	33 cd		 xor	 ecx, ebp
  00122	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00127	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  0012d	3b ec		 cmp	 ebp, esp
  0012f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c2 0c 00	 ret	 12			; 0000000cH
  0013a	66 90		 npad	 2
$LN8@Reallocate:
  0013c	01 00 00 00	 DD	 1
  00140	00 00 00 00	 DD	 $LN7@Reallocate
$LN7@Reallocate:
  00144	b8 ff ff ff	 DD	 -72			; ffffffb8H
  00148	04 00 00 00	 DD	 4
  0014c	00 00 00 00	 DD	 $LN6@Reallocate
$LN6@Reallocate:
  00150	5f		 DB	 95			; 0000005fH
  00151	4e		 DB	 78			; 0000004eH
  00152	65		 DB	 101			; 00000065H
  00153	77		 DB	 119			; 00000077H
  00154	5f		 DB	 95			; 0000005fH
  00155	70		 DB	 112			; 00000070H
  00156	74		 DB	 116			; 00000074H
  00157	72		 DB	 114			; 00000072H
  00158	00		 DB	 0
??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__New_ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z PROC ; <lambda_9366063389c5f42a00a5088cf24e69de>::operator(), COMDAT
; _this$ = ecx

; 2429 : 		return (_Reallocate_for(_Count, [](_Elem * const _New_ptr, const size_type _Count, const _Elem * const _Ptr) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2430 : 			_Traits::copy(_New_ptr, _Ptr, _Count);

  00023	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 10	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002a	51		 push	 ecx
  0002b	8b 55 08	 mov	 edx, DWORD PTR __New_ptr$[ebp]
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ?copy@?$char_traits@D@std@@SAPADQADQBDI@Z ; std::char_traits<char>::copy
  00034	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2431 : 			_Traits::assign(_New_ptr[_Count], _Elem());

  00037	c6 85 2f ff ff
	ff 00		 mov	 BYTE PTR $T1[ebp], 0
  0003e	8d 85 2f ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00044	50		 push	 eax
  00045	8b 4d 08	 mov	 ecx, DWORD PTR __New_ptr$[ebp]
  00048	03 4d 0c	 add	 ecx, DWORD PTR __Count$[ebp]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
  00051	83 c4 08	 add	 esp, 8

; 2432 : 			}, _Ptr));

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0005d	3b ec		 cmp	 ebp, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	8b e5		 mov	 esp, ebp
  00066	5d		 pop	 ebp
  00067	c2 0c 00	 ret	 12			; 0000000cH
??R<lambda_9366063389c5f42a00a5088cf24e69de>@@QBEXQADIQBD@Z ENDP ; <lambda_9366063389c5f42a00a5088cf24e69de>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\utility
;	COMDAT ??$_Max_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Max_value@I@std@@YAABIABI0@Z PROC			; std::_Max_value<unsigned int>, COMDAT

; 31   : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00012	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 32   : 	return (_Left < _Right ? _Right : _Left);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00028	73 0b		 jae	 SHORT $LN3@Max_value
  0002a	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0002d	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00033	eb 09		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00035	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00038	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv65[ebp], ecx
$LN4@Max_value:
  0003e	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv65[ebp]
  00044	89 95 38 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  0004a	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]

; 33   : 	}

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Max_value@I@std@@YAABIABI0@Z ENDP			; std::_Max_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??$destroy@PAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPAD@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPAD@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char *>, COMDAT

; 950  : 		{	// destroy object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 951  : 		_Ptr->~_Uty();
; 952  : 		}

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$destroy@PAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPAD@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstddef
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT

; 248  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 249  : 	return (__builtin_addressof(_Val));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 250  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; _this$ = ecx

; 311  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QAE@XZ ; std::allocator<char>::allocator<char>
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >

; 312  : 		{	// construct from forwarded values
; 313  : 		}

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1><>, COMDAT
; _this$ = ecx

; 311  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$allocator@UBufferElement@Graphics@Engine@@@std@@QAE@XZ ; std::allocator<Engine::Graphics::BufferElement>::allocator<Engine::Graphics::BufferElement>
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >

; 312  : 		{	// construct from forwarded values
; 313  : 		}

  00033	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c2 04 00	 ret	 4
??$?0$$V@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 264  : 	{	// do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 265  : 	return (_Ptr);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 266  : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\utility
;	COMDAT ??$_Min_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
$T1 = -200						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Min_value@I@std@@YAABIABI0@Z PROC			; std::_Min_value<unsigned int>, COMDAT

; 22   : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00012	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 23   : 	return (_Right < _Left ? _Right : _Left);

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00021	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00024	8b 10		 mov	 edx, DWORD PTR [eax]
  00026	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00028	73 0b		 jae	 SHORT $LN3@Min_value
  0002a	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0002d	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv65[ebp], eax
  00033	eb 09		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00035	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  00038	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv65[ebp], ecx
$LN4@Min_value:
  0003e	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv65[ebp]
  00044	89 95 38 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  0004a	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]

; 24   : 	}

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
??$_Min_value@I@std@@YAABIABI0@Z ENDP			; std::_Min_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ??$_Ucopy@PAUBufferElement@Graphics@Engine@@@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEPAUBufferElement@Graphics@Engine@@PAU234@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$_Ucopy@PAUBufferElement@Graphics@Engine@@@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEPAUBufferElement@Graphics@Engine@@PAU234@00@Z PROC ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Ucopy<Engine::Graphics::BufferElement *>, COMDAT
; _this$ = ecx

; 1912 : 		{	// copy [_First, _Last) to raw _Dest, using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1913 : 		return (_Uninitialized_copy(_First, _Last, _Dest, this->_Getal()));

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
  0002b	50		 push	 eax
  0002c	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PAUBufferElement@Graphics@Engine@@PAU123@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAPAUBufferElement@Graphics@Engine@@PAU123@00AAV?$allocator@UBufferElement@Graphics@Engine@@@0@@Z ; std::_Uninitialized_copy<Engine::Graphics::BufferElement *,Engine::Graphics::BufferElement *,std::allocator<Engine::Graphics::BufferElement> >
  0003d	83 c4 10	 add	 esp, 16			; 00000010H

; 1914 : 		}

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00049	3b ec		 cmp	 ebp, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAUBufferElement@Graphics@Engine@@@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEPAUBufferElement@Graphics@Engine@@PAU234@00@Z ENDP ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Ucopy<Engine::Graphics::BufferElement *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > ><std::allocator<Engine::Graphics::BufferElement>,void>, COMDAT
; _this$ = ecx

; 499  : 		{	// construct allocator from _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 497  : 		: _Mypair(_One_then_variadic_args_t(),

  00042	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??$forward@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YA$$QAV?$allocator@UBufferElement@Graphics@Engine@@@0@AAV10@@Z ; std::forward<std::allocator<Engine::Graphics::BufferElement> >
  0004b	83 c4 04	 add	 esp, 4
  0004e	50		 push	 eax
  0004f	0f b6 8d 23 ff
	ff ff		 movzx	 ecx, BYTE PTR $T2[ebp]
  00056	51		 push	 ecx
  00057	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@$$V@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1><std::allocator<Engine::Graphics::BufferElement> >
  0005f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 500  : 		_Alloc_proxy();

  00066	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Alloc_proxy

; 501  : 		}

  0006e	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00075	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00078	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00082	59		 pop	 ecx
  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0008c	3b ec		 cmp	 ebp, esp
  0008e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@XZ
__ehhandler$??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > ><std::allocator<Engine::Graphics::BufferElement>,void>
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\repos\galaxy\galaxy\main.cpp
;	COMDAT _main
_TEXT	SEGMENT
$T2 = -1632						; size = 4
$T3 = -1620						; size = 64
$T4 = -1548						; size = 12
$T5 = -1528						; size = 12
$T6 = -1508						; size = 4
$T7 = -1496						; size = 12
$T8 = -1476						; size = 4
$T9 = -1464						; size = 28
$T10 = -1428						; size = 28
_indexbuffer$ = -816					; size = 8
_buffer$ = -800						; size = 4
_va$ = -788						; size = 4
_layout$ = -776						; size = 20
_transform$ = -748					; size = 64
_projection$ = -676					; size = 64
_rotation1$ = -604					; size = 64
_rotation$ = -532					; size = 64
_indecies$ = -460					; size = 144
_positions$ = -308					; size = 224
_shader$ = -76						; size = 44
_window$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_main	PROC						; COMDAT

; 10   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$_main
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec 58 06 00
	00		 sub	 esp, 1624		; 00000658H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8d bd 9c f9 ff
	ff		 lea	 edi, DWORD PTR [ebp-1636]
  00020	b9 96 01 00 00	 mov	 ecx, 406		; 00000196H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00031	33 c5		 xor	 eax, ebp
  00033	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 11   : 	Engine::Window* window = Engine::Window::createWindow(1280, 720, "test");

  00040	68 00 00 00 00	 push	 OFFSET ??_C@_04CEJDCDCH@test?$AA@
  00045	68 d0 02 00 00	 push	 720			; 000002d0H
  0004a	68 00 05 00 00	 push	 1280			; 00000500H
  0004f	e8 00 00 00 00	 call	 ?createWindow@Window@Engine@@SAPAV12@HHPBD@Z ; Engine::Window::createWindow
  00054	83 c4 0c	 add	 esp, 12			; 0000000cH
  00057	89 45 e8	 mov	 DWORD PTR _window$[ebp], eax

; 12   : 	Graphics::Shader shader("res/Shaders/BasicVert.sdr", "res/Shaders/BasicFrag.sdr");

  0005a	6a 2c		 push	 44			; 0000002cH
  0005c	8d 4d b4	 lea	 ecx, DWORD PTR _shader$[ebp]
  0005f	e8 00 00 00 00	 call	 ?__autoclassinit2@Shader@Graphics@Engine@@QAEXI@Z
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@CICCHOKE@res?1Shaders?1BasicFrag?4sdr?$AA@
  00069	8d 8d 6c fa ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  0006f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@CBOIPCIB@res?1Shaders?1BasicVert?4sdr?$AA@
  00080	8d 8d 48 fa ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00086	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008b	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0008f	8d 85 6c fa ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  00095	50		 push	 eax
  00096	8d 8d 48 fa ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  0009c	51		 push	 ecx
  0009d	8d 4d b4	 lea	 ecx, DWORD PTR _shader$[ebp]
  000a0	e8 00 00 00 00	 call	 ??0Shader@Graphics@Engine@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z ; Engine::Graphics::Shader::Shader
  000a5	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+8], 3
  000a9	8d 8d 48 fa ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  000af	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000b4	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  000b8	8d 8d 6c fa ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  000be	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 13   : 	shader.bind();

  000c3	8d 4d b4	 lea	 ecx, DWORD PTR _shader$[ebp]
  000c6	e8 00 00 00 00	 call	 ?bind@Shader@Graphics@Engine@@QAEXXZ ; Engine::Graphics::Shader::bind

; 14   : 	/*float positions[] = {
; 15   : 		0.5f,   0.5f, -0.5f, 1.0f, 1.0f, 1.0f, 1.0f,
; 16   : 	   -0.5f,   0.5f, -0.5f, 0.0f, 1.0f, 1.0f, 1.0f,
; 17   : 	   -0.5f,  -0.5f, -0.5f, 1.0f, 0.0f, 1.0f, 1.0f,
; 18   : 		0.5f,  -0.5f, -0.5f, 1.0f, 1.0f, 0.0f, 1.0f,
; 19   : 	};*/
; 20   : 	float positions[] = {
; 21   : 		//front
; 22   : 		-1.0, -1.0,	1.0, 1.0f, 1.0f, 1.0f, 1.0f,

  000cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000d3	f3 0f 11 85 cc
	fe ff ff	 movss	 DWORD PTR _positions$[ebp], xmm0
  000db	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000e3	f3 0f 11 85 d0
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+4], xmm0
  000eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000f3	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+8], xmm0
  000fb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00103	f3 0f 11 85 d8
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+12], xmm0
  0010b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00113	f3 0f 11 85 dc
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+16], xmm0
  0011b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00123	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+20], xmm0
  0012b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00133	f3 0f 11 85 e4
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+24], xmm0

; 23   : 		 1.0, -1.0,	1.0, 1.0f, 1.0f, 1.0f, 1.0f,

  0013b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00143	f3 0f 11 85 e8
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+28], xmm0
  0014b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00153	f3 0f 11 85 ec
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+32], xmm0
  0015b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00163	f3 0f 11 85 f0
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+36], xmm0
  0016b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00173	f3 0f 11 85 f4
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+40], xmm0
  0017b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00183	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+44], xmm0
  0018b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00193	f3 0f 11 85 fc
	fe ff ff	 movss	 DWORD PTR _positions$[ebp+48], xmm0
  0019b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001a3	f3 0f 11 85 00
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+52], xmm0

; 24   : 		 1.0,  1.0,	1.0, 1.0f, 1.0f, 1.0f, 1.0f,

  001ab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001b3	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+56], xmm0
  001bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001c3	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+60], xmm0
  001cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001d3	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+64], xmm0
  001db	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001e3	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+68], xmm0
  001eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001f3	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+72], xmm0
  001fb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00203	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+76], xmm0
  0020b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00213	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+80], xmm0

; 25   : 		-1.0,  1.0,	1.0, 1.0f, 1.0f, 1.0f, 1.0f,

  0021b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00223	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+84], xmm0
  0022b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00233	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+88], xmm0
  0023b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00243	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+92], xmm0
  0024b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00253	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+96], xmm0
  0025b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00263	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+100], xmm0
  0026b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00273	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+104], xmm0
  0027b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00283	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+108], xmm0

; 26   : 		// back		 
; 27   : 		-1.0, -1.0, -1.0, 1.0f, 1.0f, 1.0f, 1.0f,

  0028b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00293	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+112], xmm0
  0029b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  002a3	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+116], xmm0
  002ab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  002b3	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+120], xmm0
  002bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002c3	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+124], xmm0
  002cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002d3	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+128], xmm0
  002db	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002e3	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+132], xmm0
  002eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002f3	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+136], xmm0

; 28   : 		 1.0, -1.0, -1.0, 1.0f, 1.0f, 1.0f, 1.0f,

  002fb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00303	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+140], xmm0
  0030b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00313	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+144], xmm0
  0031b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00323	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+148], xmm0
  0032b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00333	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+152], xmm0
  0033b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00343	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+156], xmm0
  0034b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00353	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+160], xmm0
  0035b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00363	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+164], xmm0

; 29   : 		 1.0,  1.0, -1.0, 1.0f, 1.0f, 1.0f, 1.0f,

  0036b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00373	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+168], xmm0
  0037b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00383	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+172], xmm0
  0038b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00393	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _positions$[ebp+176], xmm0
  0039b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003a3	f3 0f 11 45 80	 movss	 DWORD PTR _positions$[ebp+180], xmm0
  003a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003b0	f3 0f 11 45 84	 movss	 DWORD PTR _positions$[ebp+184], xmm0
  003b5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003bd	f3 0f 11 45 88	 movss	 DWORD PTR _positions$[ebp+188], xmm0
  003c2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003ca	f3 0f 11 45 8c	 movss	 DWORD PTR _positions$[ebp+192], xmm0

; 30   : 		-1.0,  1.0, -1.0, 1.0f, 1.0f, 1.3f, 1.0f,

  003cf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  003d7	f3 0f 11 45 90	 movss	 DWORD PTR _positions$[ebp+196], xmm0
  003dc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003e4	f3 0f 11 45 94	 movss	 DWORD PTR _positions$[ebp+200], xmm0
  003e9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  003f1	f3 0f 11 45 98	 movss	 DWORD PTR _positions$[ebp+204], xmm0
  003f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003fe	f3 0f 11 45 9c	 movss	 DWORD PTR _positions$[ebp+208], xmm0
  00403	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0040b	f3 0f 11 45 a0	 movss	 DWORD PTR _positions$[ebp+212], xmm0
  00410	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fa66666
  00418	f3 0f 11 45 a4	 movss	 DWORD PTR _positions$[ebp+216], xmm0
  0041d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00425	f3 0f 11 45 a8	 movss	 DWORD PTR _positions$[ebp+220], xmm0

; 31   : 	};
; 32   : /*
; 33   : 	unsigned int indecies[] = {
; 34   : 		0, 1, 2,
; 35   : 		2, 3, 0
; 36   : 
; 37   : 	};*/
; 38   : 
; 39   : 	unsigned int indecies[] = {
; 40   : 		0, 1, 2,

  0042a	c7 85 34 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _indecies$[ebp], 0
  00434	c7 85 38 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _indecies$[ebp+4], 1
  0043e	c7 85 3c fe ff
	ff 02 00 00 00	 mov	 DWORD PTR _indecies$[ebp+8], 2

; 41   : 		2, 3, 0,

  00448	c7 85 40 fe ff
	ff 02 00 00 00	 mov	 DWORD PTR _indecies$[ebp+12], 2
  00452	c7 85 44 fe ff
	ff 03 00 00 00	 mov	 DWORD PTR _indecies$[ebp+16], 3
  0045c	c7 85 48 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _indecies$[ebp+20], 0

; 42   : 		// top
; 43   : 		1, 5, 6,

  00466	c7 85 4c fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _indecies$[ebp+24], 1
  00470	c7 85 50 fe ff
	ff 05 00 00 00	 mov	 DWORD PTR _indecies$[ebp+28], 5
  0047a	c7 85 54 fe ff
	ff 06 00 00 00	 mov	 DWORD PTR _indecies$[ebp+32], 6

; 44   : 		6, 2, 1,

  00484	c7 85 58 fe ff
	ff 06 00 00 00	 mov	 DWORD PTR _indecies$[ebp+36], 6
  0048e	c7 85 5c fe ff
	ff 02 00 00 00	 mov	 DWORD PTR _indecies$[ebp+40], 2
  00498	c7 85 60 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _indecies$[ebp+44], 1

; 45   : 		// back
; 46   : 		7, 6, 5,

  004a2	c7 85 64 fe ff
	ff 07 00 00 00	 mov	 DWORD PTR _indecies$[ebp+48], 7
  004ac	c7 85 68 fe ff
	ff 06 00 00 00	 mov	 DWORD PTR _indecies$[ebp+52], 6
  004b6	c7 85 6c fe ff
	ff 05 00 00 00	 mov	 DWORD PTR _indecies$[ebp+56], 5

; 47   : 		5, 4, 7,

  004c0	c7 85 70 fe ff
	ff 05 00 00 00	 mov	 DWORD PTR _indecies$[ebp+60], 5
  004ca	c7 85 74 fe ff
	ff 04 00 00 00	 mov	 DWORD PTR _indecies$[ebp+64], 4
  004d4	c7 85 78 fe ff
	ff 07 00 00 00	 mov	 DWORD PTR _indecies$[ebp+68], 7

; 48   : 		// bottom
; 49   : 		4, 0, 3,

  004de	c7 85 7c fe ff
	ff 04 00 00 00	 mov	 DWORD PTR _indecies$[ebp+72], 4
  004e8	c7 85 80 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _indecies$[ebp+76], 0
  004f2	c7 85 84 fe ff
	ff 03 00 00 00	 mov	 DWORD PTR _indecies$[ebp+80], 3

; 50   : 		3, 7, 4,

  004fc	c7 85 88 fe ff
	ff 03 00 00 00	 mov	 DWORD PTR _indecies$[ebp+84], 3
  00506	c7 85 8c fe ff
	ff 07 00 00 00	 mov	 DWORD PTR _indecies$[ebp+88], 7
  00510	c7 85 90 fe ff
	ff 04 00 00 00	 mov	 DWORD PTR _indecies$[ebp+92], 4

; 51   : 		// left
; 52   : 		4, 5, 1,

  0051a	c7 85 94 fe ff
	ff 04 00 00 00	 mov	 DWORD PTR _indecies$[ebp+96], 4
  00524	c7 85 98 fe ff
	ff 05 00 00 00	 mov	 DWORD PTR _indecies$[ebp+100], 5
  0052e	c7 85 9c fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _indecies$[ebp+104], 1

; 53   : 		1, 0, 4,

  00538	c7 85 a0 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _indecies$[ebp+108], 1
  00542	c7 85 a4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _indecies$[ebp+112], 0
  0054c	c7 85 a8 fe ff
	ff 04 00 00 00	 mov	 DWORD PTR _indecies$[ebp+116], 4

; 54   : 		// right
; 55   : 		3, 2, 6,

  00556	c7 85 ac fe ff
	ff 03 00 00 00	 mov	 DWORD PTR _indecies$[ebp+120], 3
  00560	c7 85 b0 fe ff
	ff 02 00 00 00	 mov	 DWORD PTR _indecies$[ebp+124], 2
  0056a	c7 85 b4 fe ff
	ff 06 00 00 00	 mov	 DWORD PTR _indecies$[ebp+128], 6

; 56   : 		6, 7, 3,

  00574	c7 85 b8 fe ff
	ff 06 00 00 00	 mov	 DWORD PTR _indecies$[ebp+132], 6
  0057e	c7 85 bc fe ff
	ff 07 00 00 00	 mov	 DWORD PTR _indecies$[ebp+136], 7
  00588	c7 85 c0 fe ff
	ff 03 00 00 00	 mov	 DWORD PTR _indecies$[ebp+140], 3

; 57   : 
; 58   : 
; 59   : 	};
; 60   : 
; 61   : 	
; 62   : 	Math::Mat4f rotation = Math::Mat4f::rotate({ 0, 1, 0 }, .2);

  00592	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  0059a	f3 0f 11 85 3c
	fa ff ff	 movss	 DWORD PTR $T8[ebp], xmm0
  005a2	51		 push	 ecx
  005a3	0f 57 c0	 xorps	 xmm0, xmm0
  005a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ab	51		 push	 ecx
  005ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  005b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b9	51		 push	 ecx
  005ba	0f 57 c0	 xorps	 xmm0, xmm0
  005bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c2	8d 8d 28 fa ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  005c8	e8 00 00 00 00	 call	 ??0Vec3f@Math@Engine@@QAE@MMM@Z ; Engine::Math::Vec3f::Vec3f
  005cd	8d 85 3c fa ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]
  005d3	50		 push	 eax
  005d4	8d 8d 28 fa ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  005da	51		 push	 ecx
  005db	8d 95 ec fd ff
	ff		 lea	 edx, DWORD PTR _rotation$[ebp]
  005e1	52		 push	 edx
  005e2	e8 00 00 00 00	 call	 ?rotate@Mat4f@Math@Engine@@SA?AV123@ABUVec3f@23@ABM@Z ; Engine::Math::Mat4f::rotate
  005e7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 63   : 	Math::Mat4f rotation1 = Math::Mat4f::rotate({ 0, 0, 1}, .2);

  005ea	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e4ccccd
  005f2	f3 0f 11 85 1c
	fa ff ff	 movss	 DWORD PTR $T6[ebp], xmm0
  005fa	51		 push	 ecx
  005fb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00603	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00608	51		 push	 ecx
  00609	0f 57 c0	 xorps	 xmm0, xmm0
  0060c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00611	51		 push	 ecx
  00612	0f 57 c0	 xorps	 xmm0, xmm0
  00615	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061a	8d 8d 08 fa ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00620	e8 00 00 00 00	 call	 ??0Vec3f@Math@Engine@@QAE@MMM@Z ; Engine::Math::Vec3f::Vec3f
  00625	8d 85 1c fa ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  0062b	50		 push	 eax
  0062c	8d 8d 08 fa ff
	ff		 lea	 ecx, DWORD PTR $T5[ebp]
  00632	51		 push	 ecx
  00633	8d 95 a4 fd ff
	ff		 lea	 edx, DWORD PTR _rotation1$[ebp]
  00639	52		 push	 edx
  0063a	e8 00 00 00 00	 call	 ?rotate@Mat4f@Math@Engine@@SA?AV123@ABUVec3f@23@ABM@Z ; Engine::Math::Mat4f::rotate
  0063f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 64   : 	Math::Mat4f projection = Math::Mat4f::Perspective(((float)16/9), 45, 10, .1);

  00642	51		 push	 ecx
  00643	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  0064b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00650	51		 push	 ecx
  00651	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  00659	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065e	51		 push	 ecx
  0065f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42340000
  00667	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0066c	51		 push	 ecx
  0066d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fe38e39
  00675	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0067a	8d 85 5c fd ff
	ff		 lea	 eax, DWORD PTR _projection$[ebp]
  00680	50		 push	 eax
  00681	e8 00 00 00 00	 call	 ?Perspective@Mat4f@Math@Engine@@SA?AV123@MMMM@Z ; Engine::Math::Mat4f::Perspective
  00686	83 c4 14	 add	 esp, 20			; 00000014H

; 65   : 	Math::Mat4f transform = Math::Mat4f::Identity();

  00689	8d 85 14 fd ff
	ff		 lea	 eax, DWORD PTR _transform$[ebp]
  0068f	50		 push	 eax
  00690	e8 00 00 00 00	 call	 ?Identity@Mat4f@Math@Engine@@SA?AV123@XZ ; Engine::Math::Mat4f::Identity
  00695	83 c4 04	 add	 esp, 4

; 66   : 	
; 67   : 	transform *= Math::Mat4f::translate({0, 0, -5});

  00698	51		 push	 ecx
  00699	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0a00000
  006a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006a6	51		 push	 ecx
  006a7	0f 57 c0	 xorps	 xmm0, xmm0
  006aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006af	51		 push	 ecx
  006b0	0f 57 c0	 xorps	 xmm0, xmm0
  006b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b8	8d 8d f4 f9 ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  006be	e8 00 00 00 00	 call	 ??0Vec3f@Math@Engine@@QAE@MMM@Z ; Engine::Math::Vec3f::Vec3f
  006c3	8d 85 f4 f9 ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  006c9	50		 push	 eax
  006ca	8d 8d ac f9 ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  006d0	51		 push	 ecx
  006d1	e8 00 00 00 00	 call	 ?translate@Mat4f@Math@Engine@@SA?AV123@ABUVec3f@23@@Z ; Engine::Math::Mat4f::translate
  006d6	83 c4 08	 add	 esp, 8
  006d9	50		 push	 eax
  006da	8d 8d 14 fd ff
	ff		 lea	 ecx, DWORD PTR _transform$[ebp]
  006e0	e8 00 00 00 00	 call	 ??XMat4f@Math@Engine@@QAEAAV012@ABV012@@Z ; Engine::Math::Mat4f::operator*=

; 68   : 	//transform *= rotation1;
; 69   : 
; 70   : 	Graphics::VertexBufferLayout layout;

  006e5	6a 14		 push	 20			; 00000014H
  006e7	8d 8d f8 fc ff
	ff		 lea	 ecx, DWORD PTR _layout$[ebp]
  006ed	e8 00 00 00 00	 call	 ?__autoclassinit2@VertexBufferLayout@Graphics@Engine@@QAEXI@Z
  006f2	8d 8d f8 fc ff
	ff		 lea	 ecx, DWORD PTR _layout$[ebp]
  006f8	e8 00 00 00 00	 call	 ??0VertexBufferLayout@Graphics@Engine@@QAE@XZ
  006fd	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5

; 71   : 	layout.pushFloats(3);

  00701	6a 03		 push	 3
  00703	8d 8d f8 fc ff
	ff		 lea	 ecx, DWORD PTR _layout$[ebp]
  00709	e8 00 00 00 00	 call	 ?pushFloats@VertexBufferLayout@Graphics@Engine@@QAEXI@Z ; Engine::Graphics::VertexBufferLayout::pushFloats

; 72   : 	layout.pushFloats(4);

  0070e	6a 04		 push	 4
  00710	8d 8d f8 fc ff
	ff		 lea	 ecx, DWORD PTR _layout$[ebp]
  00716	e8 00 00 00 00	 call	 ?pushFloats@VertexBufferLayout@Graphics@Engine@@QAEXI@Z ; Engine::Graphics::VertexBufferLayout::pushFloats

; 73   : 	Graphics::VertexArray va;

  0071b	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _va$[ebp]
  00721	e8 00 00 00 00	 call	 ??0VertexArray@Graphics@Engine@@QAE@XZ ; Engine::Graphics::VertexArray::VertexArray
  00726	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6

; 74   : 	Engine::Graphics::Buffer buffer(positions, sizeof(positions));

  0072a	68 e0 00 00 00	 push	 224			; 000000e0H
  0072f	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _positions$[ebp]
  00735	50		 push	 eax
  00736	8d 8d e0 fc ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  0073c	e8 00 00 00 00	 call	 ??0Buffer@Graphics@Engine@@QAE@PAMI@Z ; Engine::Graphics::Buffer::Buffer
  00741	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7

; 75   : 	buffer.bind();

  00745	8d 8d e0 fc ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  0074b	e8 00 00 00 00	 call	 ?bind@Buffer@Graphics@Engine@@QBEXXZ ; Engine::Graphics::Buffer::bind

; 76   : 	Engine::Graphics::IndexBuffer indexbuffer(indecies, 36);

  00750	6a 24		 push	 36			; 00000024H
  00752	8d 85 34 fe ff
	ff		 lea	 eax, DWORD PTR _indecies$[ebp]
  00758	50		 push	 eax
  00759	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _indexbuffer$[ebp]
  0075f	e8 00 00 00 00	 call	 ??0IndexBuffer@Graphics@Engine@@QAE@PAII@Z ; Engine::Graphics::IndexBuffer::IndexBuffer
  00764	c6 45 fc 08	 mov	 BYTE PTR __$EHRec$[ebp+8], 8

; 77   : 	indexbuffer.bind();

  00768	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _indexbuffer$[ebp]
  0076e	e8 00 00 00 00	 call	 ?bind@IndexBuffer@Graphics@Engine@@QBEXXZ ; Engine::Graphics::IndexBuffer::bind

; 78   : 	va.addBuffer(buffer, layout);

  00773	83 ec 14	 sub	 esp, 20			; 00000014H
  00776	8b cc		 mov	 ecx, esp
  00778	89 a5 a0 f9 ff
	ff		 mov	 DWORD PTR $T2[ebp], esp
  0077e	8d 85 f8 fc ff
	ff		 lea	 eax, DWORD PTR _layout$[ebp]
  00784	50		 push	 eax
  00785	e8 00 00 00 00	 call	 ??0VertexBufferLayout@Graphics@Engine@@QAE@ABV012@@Z
  0078a	8d 8d e0 fc ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00790	51		 push	 ecx
  00791	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _va$[ebp]
  00797	e8 00 00 00 00	 call	 ?addBuffer@VertexArray@Graphics@Engine@@QAEXAAVBuffer@23@VVertexBufferLayout@23@@Z ; Engine::Graphics::VertexArray::addBuffer

; 79   : 	glfwSwapInterval(1);

  0079c	6a 01		 push	 1
  0079e	e8 00 00 00 00	 call	 _glfwSwapInterval
  007a3	83 c4 04	 add	 esp, 4

; 80   : 	glEnable(GL_DEPTH_TEST);

  007a6	8b f4		 mov	 esi, esp
  007a8	68 71 0b 00 00	 push	 2929			; 00000b71H
  007ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__glEnable@4
  007b3	3b f4		 cmp	 esi, esp
  007b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN2@main:

; 81   : 	
; 82   : 	while (!glfwWindowShouldClose(window->m_Windowptr))

  007ba	8b 45 e8	 mov	 eax, DWORD PTR _window$[ebp]
  007bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  007bf	51		 push	 ecx
  007c0	e8 00 00 00 00	 call	 _glfwWindowShouldClose
  007c5	83 c4 04	 add	 esp, 4
  007c8	85 c0		 test	 eax, eax
  007ca	0f 85 a8 00 00
	00		 jne	 $LN3@main

; 83   : 	{
; 84   : 		glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

  007d0	8b f4		 mov	 esi, esp
  007d2	68 00 41 00 00	 push	 16640			; 00004100H
  007d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__glClear@4
  007dd	3b f4		 cmp	 esi, esp
  007df	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 85   : 		transform *= rotation;

  007e4	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _rotation$[ebp]
  007ea	50		 push	 eax
  007eb	8d 8d 14 fd ff
	ff		 lea	 ecx, DWORD PTR _transform$[ebp]
  007f1	e8 00 00 00 00	 call	 ??XMat4f@Math@Engine@@QAEAAV012@ABV012@@Z ; Engine::Math::Mat4f::operator*=

; 86   : 		transform *= rotation1;

  007f6	8d 85 a4 fd ff
	ff		 lea	 eax, DWORD PTR _rotation1$[ebp]
  007fc	50		 push	 eax
  007fd	8d 8d 14 fd ff
	ff		 lea	 ecx, DWORD PTR _transform$[ebp]
  00803	e8 00 00 00 00	 call	 ??XMat4f@Math@Engine@@QAEAAV012@ABV012@@Z ; Engine::Math::Mat4f::operator*=

; 87   : 		
; 88   : 		shader.setUniformMat4("m_Projection", projection);

  00808	83 ec 40	 sub	 esp, 64			; 00000040H
  0080b	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00810	8d b5 5c fd ff
	ff		 lea	 esi, DWORD PTR _projection$[ebp]
  00816	8b fc		 mov	 edi, esp
  00818	f3 a5		 rep movsd
  0081a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BKCPJGKD@m_Projection?$AA@
  0081f	8d 4d b4	 lea	 ecx, DWORD PTR _shader$[ebp]
  00822	e8 00 00 00 00	 call	 ?setUniformMat4@Shader@Graphics@Engine@@QAEXPBDVMat4f@Math@3@@Z ; Engine::Graphics::Shader::setUniformMat4

; 89   : 		shader.setUniformMat4("m_Transform", transform);

  00827	83 ec 40	 sub	 esp, 64			; 00000040H
  0082a	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0082f	8d b5 14 fd ff
	ff		 lea	 esi, DWORD PTR _transform$[ebp]
  00835	8b fc		 mov	 edi, esp
  00837	f3 a5		 rep movsd
  00839	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PFEJEGL@m_Transform?$AA@
  0083e	8d 4d b4	 lea	 ecx, DWORD PTR _shader$[ebp]
  00841	e8 00 00 00 00	 call	 ?setUniformMat4@Shader@Graphics@Engine@@QAEXPBDVMat4f@Math@3@@Z ; Engine::Graphics::Shader::setUniformMat4

; 90   : 		//std::cout << glGetError() << std::endl;
; 91   : 		glDrawElements(GL_TRIANGLES, 36, GL_UNSIGNED_INT, 0);

  00846	8b f4		 mov	 esi, esp
  00848	6a 00		 push	 0
  0084a	68 05 14 00 00	 push	 5125			; 00001405H
  0084f	6a 24		 push	 36			; 00000024H
  00851	6a 04		 push	 4
  00853	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__glDrawElements@16
  00859	3b f4		 cmp	 esi, esp
  0085b	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 92   : 		
; 93   : 		glfwSwapBuffers(window->m_Windowptr);

  00860	8b 45 e8	 mov	 eax, DWORD PTR _window$[ebp]
  00863	8b 08		 mov	 ecx, DWORD PTR [eax]
  00865	51		 push	 ecx
  00866	e8 00 00 00 00	 call	 _glfwSwapBuffers
  0086b	83 c4 04	 add	 esp, 4

; 94   : 		glfwPollEvents();

  0086e	e8 00 00 00 00	 call	 _glfwPollEvents

; 95   : 	}

  00873	e9 42 ff ff ff	 jmp	 $LN2@main
$LN3@main:

; 96   : }	

  00878	c6 45 fc 07	 mov	 BYTE PTR __$EHRec$[ebp+8], 7
  0087c	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _indexbuffer$[ebp]
  00882	e8 00 00 00 00	 call	 ??1IndexBuffer@Graphics@Engine@@QAE@XZ ; Engine::Graphics::IndexBuffer::~IndexBuffer
  00887	c6 45 fc 06	 mov	 BYTE PTR __$EHRec$[ebp+8], 6
  0088b	8d 8d e0 fc ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00891	e8 00 00 00 00	 call	 ??1Buffer@Graphics@Engine@@QAE@XZ ; Engine::Graphics::Buffer::~Buffer
  00896	c6 45 fc 05	 mov	 BYTE PTR __$EHRec$[ebp+8], 5
  0089a	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _va$[ebp]
  008a0	e8 00 00 00 00	 call	 ??1VertexArray@Graphics@Engine@@QAE@XZ ; Engine::Graphics::VertexArray::~VertexArray
  008a5	c6 45 fc 04	 mov	 BYTE PTR __$EHRec$[ebp+8], 4
  008a9	8d 8d f8 fc ff
	ff		 lea	 ecx, DWORD PTR _layout$[ebp]
  008af	e8 00 00 00 00	 call	 ??1VertexBufferLayout@Graphics@Engine@@QAE@XZ
  008b4	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  008bb	8d 4d b4	 lea	 ecx, DWORD PTR _shader$[ebp]
  008be	e8 00 00 00 00	 call	 ??1Shader@Graphics@Engine@@QAE@XZ ; Engine::Graphics::Shader::~Shader
  008c3	33 c0		 xor	 eax, eax
  008c5	52		 push	 edx
  008c6	8b cd		 mov	 ecx, ebp
  008c8	50		 push	 eax
  008c9	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN26@main
  008cf	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  008d4	58		 pop	 eax
  008d5	5a		 pop	 edx
  008d6	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  008d9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  008e0	59		 pop	 ecx
  008e1	5f		 pop	 edi
  008e2	5e		 pop	 esi
  008e3	5b		 pop	 ebx
  008e4	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  008e7	33 cd		 xor	 ecx, ebp
  008e9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  008ee	81 c4 64 06 00
	00		 add	 esp, 1636		; 00000664H
  008f4	3b ec		 cmp	 ebp, esp
  008f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008fb	8b e5		 mov	 esp, ebp
  008fd	5d		 pop	 ebp
  008fe	c3		 ret	 0
  008ff	90		 npad	 1
$LN26@main:
  00900	0b 00 00 00	 DD	 11			; 0000000bH
  00904	00 00 00 00	 DD	 $LN25@main
$LN25@main:
  00908	b4 ff ff ff	 DD	 -76			; ffffffb4H
  0090c	2c 00 00 00	 DD	 44			; 0000002cH
  00910	00 00 00 00	 DD	 $LN13@main
  00914	cc fe ff ff	 DD	 -308			; fffffeccH
  00918	e0 00 00 00	 DD	 224			; 000000e0H
  0091c	00 00 00 00	 DD	 $LN14@main
  00920	34 fe ff ff	 DD	 -460			; fffffe34H
  00924	90 00 00 00	 DD	 144			; 00000090H
  00928	00 00 00 00	 DD	 $LN15@main
  0092c	ec fd ff ff	 DD	 -532			; fffffdecH
  00930	40 00 00 00	 DD	 64			; 00000040H
  00934	00 00 00 00	 DD	 $LN16@main
  00938	a4 fd ff ff	 DD	 -604			; fffffda4H
  0093c	40 00 00 00	 DD	 64			; 00000040H
  00940	00 00 00 00	 DD	 $LN17@main
  00944	5c fd ff ff	 DD	 -676			; fffffd5cH
  00948	40 00 00 00	 DD	 64			; 00000040H
  0094c	00 00 00 00	 DD	 $LN18@main
  00950	14 fd ff ff	 DD	 -748			; fffffd14H
  00954	40 00 00 00	 DD	 64			; 00000040H
  00958	00 00 00 00	 DD	 $LN19@main
  0095c	f8 fc ff ff	 DD	 -776			; fffffcf8H
  00960	14 00 00 00	 DD	 20			; 00000014H
  00964	00 00 00 00	 DD	 $LN20@main
  00968	ec fc ff ff	 DD	 -788			; fffffcecH
  0096c	04 00 00 00	 DD	 4
  00970	00 00 00 00	 DD	 $LN21@main
  00974	e0 fc ff ff	 DD	 -800			; fffffce0H
  00978	04 00 00 00	 DD	 4
  0097c	00 00 00 00	 DD	 $LN22@main
  00980	d0 fc ff ff	 DD	 -816			; fffffcd0H
  00984	08 00 00 00	 DD	 8
  00988	00 00 00 00	 DD	 $LN23@main
$LN23@main:
  0098c	69		 DB	 105			; 00000069H
  0098d	6e		 DB	 110			; 0000006eH
  0098e	64		 DB	 100			; 00000064H
  0098f	65		 DB	 101			; 00000065H
  00990	78		 DB	 120			; 00000078H
  00991	62		 DB	 98			; 00000062H
  00992	75		 DB	 117			; 00000075H
  00993	66		 DB	 102			; 00000066H
  00994	66		 DB	 102			; 00000066H
  00995	65		 DB	 101			; 00000065H
  00996	72		 DB	 114			; 00000072H
  00997	00		 DB	 0
$LN22@main:
  00998	62		 DB	 98			; 00000062H
  00999	75		 DB	 117			; 00000075H
  0099a	66		 DB	 102			; 00000066H
  0099b	66		 DB	 102			; 00000066H
  0099c	65		 DB	 101			; 00000065H
  0099d	72		 DB	 114			; 00000072H
  0099e	00		 DB	 0
$LN21@main:
  0099f	76		 DB	 118			; 00000076H
  009a0	61		 DB	 97			; 00000061H
  009a1	00		 DB	 0
$LN20@main:
  009a2	6c		 DB	 108			; 0000006cH
  009a3	61		 DB	 97			; 00000061H
  009a4	79		 DB	 121			; 00000079H
  009a5	6f		 DB	 111			; 0000006fH
  009a6	75		 DB	 117			; 00000075H
  009a7	74		 DB	 116			; 00000074H
  009a8	00		 DB	 0
$LN19@main:
  009a9	74		 DB	 116			; 00000074H
  009aa	72		 DB	 114			; 00000072H
  009ab	61		 DB	 97			; 00000061H
  009ac	6e		 DB	 110			; 0000006eH
  009ad	73		 DB	 115			; 00000073H
  009ae	66		 DB	 102			; 00000066H
  009af	6f		 DB	 111			; 0000006fH
  009b0	72		 DB	 114			; 00000072H
  009b1	6d		 DB	 109			; 0000006dH
  009b2	00		 DB	 0
$LN18@main:
  009b3	70		 DB	 112			; 00000070H
  009b4	72		 DB	 114			; 00000072H
  009b5	6f		 DB	 111			; 0000006fH
  009b6	6a		 DB	 106			; 0000006aH
  009b7	65		 DB	 101			; 00000065H
  009b8	63		 DB	 99			; 00000063H
  009b9	74		 DB	 116			; 00000074H
  009ba	69		 DB	 105			; 00000069H
  009bb	6f		 DB	 111			; 0000006fH
  009bc	6e		 DB	 110			; 0000006eH
  009bd	00		 DB	 0
$LN17@main:
  009be	72		 DB	 114			; 00000072H
  009bf	6f		 DB	 111			; 0000006fH
  009c0	74		 DB	 116			; 00000074H
  009c1	61		 DB	 97			; 00000061H
  009c2	74		 DB	 116			; 00000074H
  009c3	69		 DB	 105			; 00000069H
  009c4	6f		 DB	 111			; 0000006fH
  009c5	6e		 DB	 110			; 0000006eH
  009c6	31		 DB	 49			; 00000031H
  009c7	00		 DB	 0
$LN16@main:
  009c8	72		 DB	 114			; 00000072H
  009c9	6f		 DB	 111			; 0000006fH
  009ca	74		 DB	 116			; 00000074H
  009cb	61		 DB	 97			; 00000061H
  009cc	74		 DB	 116			; 00000074H
  009cd	69		 DB	 105			; 00000069H
  009ce	6f		 DB	 111			; 0000006fH
  009cf	6e		 DB	 110			; 0000006eH
  009d0	00		 DB	 0
$LN15@main:
  009d1	69		 DB	 105			; 00000069H
  009d2	6e		 DB	 110			; 0000006eH
  009d3	64		 DB	 100			; 00000064H
  009d4	65		 DB	 101			; 00000065H
  009d5	63		 DB	 99			; 00000063H
  009d6	69		 DB	 105			; 00000069H
  009d7	65		 DB	 101			; 00000065H
  009d8	73		 DB	 115			; 00000073H
  009d9	00		 DB	 0
$LN14@main:
  009da	70		 DB	 112			; 00000070H
  009db	6f		 DB	 111			; 0000006fH
  009dc	73		 DB	 115			; 00000073H
  009dd	69		 DB	 105			; 00000069H
  009de	74		 DB	 116			; 00000074H
  009df	69		 DB	 105			; 00000069H
  009e0	6f		 DB	 111			; 0000006fH
  009e1	6e		 DB	 110			; 0000006eH
  009e2	73		 DB	 115			; 00000073H
  009e3	00		 DB	 0
$LN13@main:
  009e4	73		 DB	 115			; 00000073H
  009e5	68		 DB	 104			; 00000068H
  009e6	61		 DB	 97			; 00000061H
  009e7	64		 DB	 100			; 00000064H
  009e8	65		 DB	 101			; 00000065H
  009e9	72		 DB	 114			; 00000072H
  009ea	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
  00000	8d 8d 6c fa ff
	ff		 lea	 ecx, DWORD PTR $T10[ebp]
  00006	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$1:
  0000b	8d 8d 48 fa ff
	ff		 lea	 ecx, DWORD PTR $T9[ebp]
  00011	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__unwindfunclet$_main$2:
  00016	8d 4d b4	 lea	 ecx, DWORD PTR _shader$[ebp]
  00019	e9 00 00 00 00	 jmp	 ??1Shader@Graphics@Engine@@QAE@XZ ; Engine::Graphics::Shader::~Shader
__unwindfunclet$_main$3:
  0001e	8d 8d f8 fc ff
	ff		 lea	 ecx, DWORD PTR _layout$[ebp]
  00024	e9 00 00 00 00	 jmp	 ??1VertexBufferLayout@Graphics@Engine@@QAE@XZ
__unwindfunclet$_main$4:
  00029	8d 8d ec fc ff
	ff		 lea	 ecx, DWORD PTR _va$[ebp]
  0002f	e9 00 00 00 00	 jmp	 ??1VertexArray@Graphics@Engine@@QAE@XZ ; Engine::Graphics::VertexArray::~VertexArray
__unwindfunclet$_main$5:
  00034	8d 8d e0 fc ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  0003a	e9 00 00 00 00	 jmp	 ??1Buffer@Graphics@Engine@@QAE@XZ ; Engine::Graphics::Buffer::~Buffer
__unwindfunclet$_main$6:
  0003f	8d 8d d0 fc ff
	ff		 lea	 ecx, DWORD PTR _indexbuffer$[ebp]
  00045	e9 00 00 00 00	 jmp	 ??1IndexBuffer@Graphics@Engine@@QAE@XZ ; Engine::Graphics::IndexBuffer::~IndexBuffer
__ehhandler$_main:
  0004a	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0004e	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00051	8b 8a 98 f9 ff
	ff		 mov	 ecx, DWORD PTR [edx-1640]
  00057	33 c8		 xor	 ecx, eax
  00059	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005e	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00061	33 c8		 xor	 ecx, eax
  00063	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00068	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$_main
  0006d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@VertexBufferLayout@Graphics@Engine@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@VertexBufferLayout@Graphics@Engine@@QAEXI@Z PROC ; Engine::Graphics::VertexBufferLayout::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00026	50		 push	 eax
  00027	6a 00		 push	 0
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__autoclassinit2@VertexBufferLayout@Graphics@Engine@@QAEXI@Z ENDP ; Engine::Graphics::VertexBufferLayout::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0VertexBufferLayout@Graphics@Engine@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0VertexBufferLayout@Graphics@Engine@@QAE@ABV012@@Z PROC ; Engine::Graphics::VertexBufferLayout::VertexBufferLayout, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00026	50		 push	 eax
  00027	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00032	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00035	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00038	89 50 10	 mov	 DWORD PTR [eax+16], edx
  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 04 00	 ret	 4
??0VertexBufferLayout@Graphics@Engine@@QAE@ABV012@@Z ENDP ; Engine::Graphics::VertexBufferLayout::VertexBufferLayout
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1VertexBufferLayout@Graphics@Engine@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1VertexBufferLayout@Graphics@Engine@@QAE@XZ PROC	; Engine::Graphics::VertexBufferLayout::~VertexBufferLayout, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::~vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1VertexBufferLayout@Graphics@Engine@@QAE@XZ ENDP	; Engine::Graphics::VertexBufferLayout::~VertexBufferLayout
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0VertexBufferLayout@Graphics@Engine@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0VertexBufferLayout@Graphics@Engine@@QAE@XZ PROC	; Engine::Graphics::VertexBufferLayout::VertexBufferLayout, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0
  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
??0VertexBufferLayout@Graphics@Engine@@QAE@XZ ENDP	; Engine::Graphics::VertexBufferLayout::VertexBufferLayout
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Xlength@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@CAXXZ PROC ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Xlength, COMDAT

; 2015 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 2016 : 		_Xlength_error("vector<T> too long");

  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  00023	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 2017 : 		}

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?_Xlength@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@CAXXZ ENDP ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Tidy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Tidy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEXXZ PROC ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Tidy, COMDAT
; _this$ = ecx

; 2000 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2001 : 		this->_Orphan_all();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Orphan_all

; 2002 : 
; 2003 : 		if (this->_Myfirst() != pointer())

  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  00033	83 38 00	 cmp	 DWORD PTR [eax], 0
  00036	74 6b		 je	 SHORT $LN1@Tidy

; 2004 : 			{	// destroy and deallocate old array
; 2005 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast
  00040	8b 00		 mov	 eax, DWORD PTR [eax]
  00042	50		 push	 eax
  00043	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  0004b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004d	51		 push	 ecx
  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEXPAUBufferElement@Graphics@Engine@@0@Z ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Destroy

; 2006 : 			this->_Getal().deallocate(this->_Myfirst(), capacity());

  00056	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	e8 00 00 00 00	 call	 ?capacity@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::capacity
  0005e	50		 push	 eax
  0005f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  00067	8b 00		 mov	 eax, DWORD PTR [eax]
  00069	50		 push	 eax
  0006a	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ?deallocate@?$allocator@UBufferElement@Graphics@Engine@@@std@@QAEXQAUBufferElement@Graphics@Engine@@I@Z ; std::allocator<Engine::Graphics::BufferElement>::deallocate

; 2007 : 
; 2008 : 			this->_Myfirst() = pointer();

  00079	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  00081	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 2009 : 			this->_Mylast() = pointer();

  00087	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast
  0008f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 2010 : 			this->_Myend() = pointer();

  00095	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00098	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myend
  0009d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@Tidy:

; 2011 : 			}
; 2012 : 		}

  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000ac	3b ec		 cmp	 ebp, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c3		 ret	 0
?_Tidy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEXXZ ENDP ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Buy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAE_NI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Newcapacity$ = 8					; size = 4
?_Buy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAE_NI@Z PROC ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Buy, COMDAT
; _this$ = ecx

; 1962 : 		{	// allocate array with _Newcapacity elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1963 : 		this->_Myfirst() = pointer();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  0002b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1964 : 		this->_Mylast() = pointer();

  00031	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00034	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast
  00039	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1965 : 		this->_Myend() = pointer();

  0003f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00042	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myend
  00047	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1966 : 
; 1967 : 		if (_Newcapacity == 0)

  0004d	83 7d 08 00	 cmp	 DWORD PTR __Newcapacity$[ebp], 0
  00051	75 04		 jne	 SHORT $LN2@Buy

; 1968 : 			{
; 1969 : 			return (false);

  00053	32 c0		 xor	 al, al
  00055	eb 63		 jmp	 SHORT $LN4@Buy
$LN2@Buy:

; 1970 : 			}
; 1971 : 
; 1972 : 		if (_Newcapacity > max_size())

  00057	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005a	e8 00 00 00 00	 call	 ?max_size@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::max_size
  0005f	39 45 08	 cmp	 DWORD PTR __Newcapacity$[ebp], eax
  00062	76 05		 jbe	 SHORT $LN3@Buy

; 1973 : 			{
; 1974 : 			_Xlength();

  00064	e8 00 00 00 00	 call	 ?_Xlength@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@CAXXZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Xlength
$LN3@Buy:

; 1975 : 			}
; 1976 : 
; 1977 : 		this->_Myfirst() = this->_Getal().allocate(_Newcapacity);

  00069	8b 45 08	 mov	 eax, DWORD PTR __Newcapacity$[ebp]
  0006c	50		 push	 eax
  0006d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00070	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ?allocate@?$allocator@UBufferElement@Graphics@Engine@@@std@@QAEPAUBufferElement@Graphics@Engine@@I@Z ; std::allocator<Engine::Graphics::BufferElement>::allocate
  0007c	8b f0		 mov	 esi, eax
  0007e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00081	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  00086	89 30		 mov	 DWORD PTR [eax], esi

; 1978 : 		this->_Mylast() = this->_Myfirst();

  00088	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008b	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  00090	8b f0		 mov	 esi, eax
  00092	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00095	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast
  0009a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0009c	89 08		 mov	 DWORD PTR [eax], ecx

; 1979 : 		this->_Myend() = this->_Myfirst() + _Newcapacity;

  0009e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  000a6	8b 75 08	 mov	 esi, DWORD PTR __Newcapacity$[ebp]
  000a9	c1 e6 04	 shl	 esi, 4
  000ac	03 30		 add	 esi, DWORD PTR [eax]
  000ae	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000b1	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myend
  000b6	89 30		 mov	 DWORD PTR [eax], esi

; 1980 : 
; 1981 : 		return (true);

  000b8	b0 01		 mov	 al, 1
$LN4@Buy:

; 1982 : 		}

  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5b		 pop	 ebx
  000bd	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  000c3	3b ec		 cmp	 ebp, esp
  000c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c2 04 00	 ret	 4
?_Buy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAE_NI@Z ENDP ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Buy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Destroy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEXPAUBufferElement@Graphics@Engine@@0@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEXPAUBufferElement@Graphics@Engine@@0@Z PROC ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Destroy, COMDAT
; _this$ = ecx

; 1938 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1939 : 		_Destroy_range(_First, _Last, this->_Getal());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
  0002b	50		 push	 eax
  0002c	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@YAXPAUBufferElement@Graphics@Engine@@0AAV?$allocator@UBufferElement@Graphics@Engine@@@0@@Z ; std::_Destroy_range<std::allocator<Engine::Graphics::BufferElement> >
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1940 : 		}

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c2 08 00	 ret	 8
?_Destroy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEXPAUBufferElement@Graphics@Engine@@0@Z ENDP ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?capacity@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?capacity@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ PROC ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::capacity, COMDAT
; _this$ = ecx

; 1774 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1775 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myend
  0002b	8b f0		 mov	 esi, eax
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  00035	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00037	2b 08		 sub	 ecx, DWORD PTR [eax]
  00039	c1 f9 04	 sar	 ecx, 4
  0003c	8b c1		 mov	 eax, ecx

; 1776 : 		}

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?capacity@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ ENDP ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?max_size@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -224						; size = 4
$T2 = -212						; size = 4
_this$ = -8						; size = 4
?max_size@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ PROC ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::max_size, COMDAT
; _this$ = ecx

; 1768 : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1769 : 		return (_Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@SAIABV?$allocator@UBufferElement@Graphics@Engine@@@2@@Z ; std::_Default_allocator_traits<std::allocator<Engine::Graphics::BufferElement> >::max_size
  00031	83 c4 04	 add	 esp, 4
  00034	89 85 2c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0003a	e8 00 00 00 00	 call	 ?max@?$numeric_limits@H@std@@SAHXZ ; std::numeric_limits<int>::max
  0003f	89 85 20 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00045	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0004b	50		 push	 eax
  0004c	8d 8d 20 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$_Min_value@I@std@@YAABIABI0@Z ; std::_Min_value<unsigned int>
  00058	83 c4 08	 add	 esp, 8
  0005b	8b 00		 mov	 eax, DWORD PTR [eax]

; 1770 : 			_Alty_traits::max_size(this->_Getal())));
; 1771 : 		}

  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?max_size@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ ENDP ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?size@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?size@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ PROC ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::size, COMDAT
; _this$ = ecx

; 1763 : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1764 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast
  0002b	8b f0		 mov	 esi, eax
  0002d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  00035	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00037	2b 08		 sub	 ecx, DWORD PTR [eax]
  00039	c1 f9 04	 sar	 ecx, 4
  0003c	8b c1		 mov	 eax, ecx

; 1765 : 		}

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
?size@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ ENDP ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ??1?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ PROC ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::~vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >, COMDAT
; _this$ = ecx

; 919  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 920  : 		_Tidy();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEXXZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Tidy

; 921  : 		}

  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??1?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::~_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ENDP ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::~vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv69 = -236						; size = 4
$T2 = -225						; size = 1
_this$ = -24						; size = 4
__$EHRec$ = -16						; size = 16
__Right$ = 8						; size = 4
??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z PROC ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >, COMDAT
; _this$ = ecx

; 767  : 		{	// construct by copying _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00022	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00027	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002c	f3 ab		 rep stosd
  0002e	59		 pop	 ecx
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00034	33 c5		 xor	 eax, ebp
  00036	50		 push	 eax
  00037	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  0003a	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00040	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00043	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 766  : 		: _Mybase(_Alty_traits::select_on_container_copy_construction(_Right._Getal()))

  00046	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00049	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
  0004e	50		 push	 eax
  0004f	8d 85 1f ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@SA?AV?$allocator@UBufferElement@Graphics@Engine@@@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<Engine::Graphics::BufferElement> >::select_on_container_copy_construction
  0005b	83 c4 08	 add	 esp, 8
  0005e	50		 push	 eax
  0005f	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00062	e8 00 00 00 00	 call	 ??$?0V?$allocator@UBufferElement@Graphics@Engine@@@std@@X@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@$$QAV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > ><std::allocator<Engine::Graphics::BufferElement>,void>
  00067	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 768  : 		if (_Buy(_Right.size()))

  0006e	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00071	e8 00 00 00 00	 call	 ?size@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QBEIXZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::size
  00076	50		 push	 eax
  00077	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ?_Buy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAE_NI@Z ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Buy
  0007f	0f b6 c0	 movzx	 eax, al
  00082	85 c0		 test	 eax, eax
  00084	74 6c		 je	 SHORT $LN1@vector

; 769  : 			{	// nonzero, fill it
; 770  : 			_TRY_BEGIN

  00086	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1

; 771  : 			this->_Mylast() = _Ucopy(_Right._Myfirst(), _Right._Mylast(), this->_Myfirst());

  0008a	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  00092	8b 00		 mov	 eax, DWORD PTR [eax]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00098	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast
  0009d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009f	51		 push	 ecx
  000a0	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  000a3	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
  000a8	8b 10		 mov	 edx, DWORD PTR [eax]
  000aa	52		 push	 edx
  000ab	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ae	e8 00 00 00 00	 call	 ??$_Ucopy@PAUBufferElement@Graphics@Engine@@@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEPAUBufferElement@Graphics@Engine@@PAU234@00@Z ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Ucopy<Engine::Graphics::BufferElement *>
  000b3	89 85 14 ff ff
	ff		 mov	 DWORD PTR tv69[ebp], eax
  000b9	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000bc	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast
  000c1	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR tv69[ebp]
  000c7	89 08		 mov	 DWORD PTR [eax], ecx
  000c9	eb 17		 jmp	 SHORT $LN5@vector
__catch$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z$0:

; 772  : 			_CATCH_ALL
; 773  : 			_Tidy();

  000cb	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  000ce	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@AAEXXZ ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::_Tidy

; 774  : 			_RERAISE;

  000d3	6a 00		 push	 0
  000d5	6a 00		 push	 0
  000d7	e8 00 00 00 00	 call	 __CxxThrowException@8

; 775  : 			_CATCH_END

  000dc	b8 00 00 00 00	 mov	 eax, $LN9@vector
  000e1	c3		 ret	 0
$LN5@vector:
  000e2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  000e9	eb 07		 jmp	 SHORT $LN1@vector
$LN9@vector:
  000eb	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
$LN1@vector:

; 776  : 			}
; 777  : 		}

  000f2	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000f9	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
$LN4@vector:
  000fc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000ff	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00106	59		 pop	 ecx
  00107	5f		 pop	 edi
  00108	5e		 pop	 esi
  00109	5b		 pop	 ebx
  0010a	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  00110	3b ec		 cmp	 ebp, esp
  00112	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00117	8b e5		 mov	 esp, ebp
  00119	5d		 pop	 ebp
  0011a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z$2:
  00000	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::~_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >
__ehhandler$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 10 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-240]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ PROC ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >, COMDAT
; _this$ = ecx

; 684  : 		{	// construct empty vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 683  : 		: _Mybase()

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >

; 685  : 		}

  0004a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0004d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00050	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00057	59		 pop	 ecx
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi
  0005a	5b		 pop	 ebx
  0005b	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00061	3b ec		 cmp	 ebp, esp
  00063	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ENDP ; std::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >::vector<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::~_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::~_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 351  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 352  : 		return (_Myval2);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 353  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_second@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 346  : 		{	// return reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 347  : 		return (_Myval2);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 348  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_second@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QBEABV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QBEABV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 331  : 		{	// return const reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 332  : 		return (*this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 333  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QBEABV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 326  : 		{	// return reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 327  : 		return (*this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 328  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >::~_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1_Container_base12@std@@QAE@XZ ; std::_Container_base12::~_Container_base12
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >::~_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >, COMDAT
; _this$ = ecx

; 436  : 		{	// initialize values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QAE@XZ ; std::_Container_base12::_Container_base12

; 433  : 		: _Myfirst(),

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 434  : 		_Mylast(),

  00035	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00038	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0

; 435  : 		_Myend()

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00042	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 437  : 		}

  00049	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myend, COMDAT
; _this$ = ecx

; 633  : 		{	// return const reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 634  : 		return (_Get_data()._Myend);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
  0002b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 635  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myend, COMDAT
; _this$ = ecx

; 628  : 		{	// return reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 629  : 		return (_Get_data()._Myend);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
  0002b	83 c0 0c	 add	 eax, 12			; 0000000cH

; 630  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast, COMDAT
; _this$ = ecx

; 623  : 		{	// return const reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 624  : 		return (_Get_data()._Mylast);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
  0002b	83 c0 08	 add	 eax, 8

; 625  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast, COMDAT
; _this$ = ecx

; 618  : 		{	// return reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 619  : 		return (_Get_data()._Mylast);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
  0002b	83 c0 08	 add	 eax, 8

; 620  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst, COMDAT
; _this$ = ecx

; 613  : 		{	// return const reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 614  : 		return (_Get_data()._Myfirst);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
  0002b	83 c0 04	 add	 eax, 4

; 615  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABQAUBufferElement@Graphics@Engine@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst, COMDAT
; _this$ = ecx

; 608  : 		{	// return reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 609  : 		return (_Get_data()._Myfirst);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
  0002b	83 c0 04	 add	 eax, 4

; 610  : 		}

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00037	3b ec		 cmp	 ebp, esp
  00039	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAUBufferElement@Graphics@Engine@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data, COMDAT
; _this$ = ecx

; 603  : 		{	// return const reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 604  : 		return (_Mypair._Get_second());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_second

; 605  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data, COMDAT
; _this$ = ecx

; 598  : 		{	// return reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 599  : 		return (_Mypair._Get_second());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_second

; 600  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal, COMDAT
; _this$ = ecx

; 593  : 		{	// return const reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 594  : 		return (_Mypair._Get_first());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QBEABV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_first

; 595  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QBEABV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal, COMDAT
; _this$ = ecx

; 588  : 		{	// return reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 589  : 		return (_Mypair._Get_first());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Get_first

; 590  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 578  : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 579  : 		_Get_data()._Orphan_all();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
  0002b	8b c8		 mov	 ecx, eax
  0002d	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 580  : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myproxy, COMDAT
; _this$ = ecx

; 567  : 		{	// return reference to _Myproxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 568  : 		return (_Get_data()._Myproxy);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data

; 569  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Proxy_allocator$ = -21				; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 553  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 554  : 		_Alproxy _Proxy_allocator(_Getal());

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
  00035	50		 push	 eax
  00036	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00039	e8 00 00 00 00	 call	 ??$?0UBufferElement@Graphics@Engine@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Engine::Graphics::BufferElement>

; 555  : 		_Orphan_all();

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Orphan_all

; 556  : 		_Alproxy_traits::destroy(_Proxy_allocator, _Myproxy());

  00046	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myproxy
  0004e	8b 00		 mov	 eax, DWORD PTR [eax]
  00050	50		 push	 eax
  00051	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
  0005a	83 c4 08	 add	 esp, 8

; 557  : 		_Deallocate_plain(_Proxy_allocator, _Myproxy());

  0005d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myproxy
  00065	8b 00		 mov	 eax, DWORD PTR [eax]
  00067	50		 push	 eax
  00068	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
  00071	83 c4 08	 add	 esp, 8

; 558  : 		_Myproxy() = 0;

  00074	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myproxy
  0007c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 559  : 		}

  00082	52		 push	 edx
  00083	8b cd		 mov	 ecx, ebp
  00085	50		 push	 eax
  00086	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  0008c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00091	58		 pop	 eax
  00092	5a		 pop	 edx
  00093	5f		 pop	 edi
  00094	5e		 pop	 esi
  00095	5b		 pop	 ebx
  00096	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00099	33 cd		 xor	 ecx, ebp
  0009b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a0	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  000a6	3b ec		 cmp	 ebp, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c3		 ret	 0
  000b1	0f 1f 00	 npad	 3
$LN5@Free_proxy:
  000b4	01 00 00 00	 DD	 1
  000b8	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000bc	eb ff ff ff	 DD	 -21			; ffffffebH
  000c0	01 00 00 00	 DD	 1
  000c4	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000c8	5f		 DB	 95			; 0000005fH
  000c9	50		 DB	 80			; 00000050H
  000ca	72		 DB	 114			; 00000072H
  000cb	6f		 DB	 111			; 0000006fH
  000cc	78		 DB	 120			; 00000078H
  000cd	79		 DB	 121			; 00000079H
  000ce	5f		 DB	 95			; 0000005fH
  000cf	61		 DB	 97			; 00000061H
  000d0	6c		 DB	 108			; 0000006cH
  000d1	6c		 DB	 108			; 0000006cH
  000d2	6f		 DB	 111			; 0000006fH
  000d3	63		 DB	 99			; 00000063H
  000d4	61		 DB	 97			; 00000061H
  000d5	74		 DB	 116			; 00000074H
  000d6	6f		 DB	 111			; 0000006fH
  000d7	72		 DB	 114			; 00000072H
  000d8	00		 DB	 0
?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -232						; size = 8
__Proxy_allocator$ = -21				; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 545  : 		{	// construct proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00013	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 546  : 		_Alproxy _Proxy_allocator(_Getal());

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$allocator@UBufferElement@Graphics@Engine@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Getal
  00035	50		 push	 eax
  00036	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00039	e8 00 00 00 00	 call	 ??$?0UBufferElement@Graphics@Engine@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@UBufferElement@Graphics@Engine@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><Engine::Graphics::BufferElement>

; 547  : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

  0003e	6a 01		 push	 1
  00040	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00043	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004e	83 c4 04	 add	 esp, 4
  00051	8b f0		 mov	 esi, eax
  00053	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myproxy
  0005b	89 30		 mov	 DWORD PTR [eax], esi

; 548  : 		_Alproxy_traits::construct(_Proxy_allocator, _Myproxy(), _Container_proxy());

  0005d	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00063	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  00068	50		 push	 eax
  00069	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myproxy
  00071	8b 00		 mov	 eax, DWORD PTR [eax]
  00073	50		 push	 eax
  00074	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 549  : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

  00080	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Get_data
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@YAPAV?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@0@AAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> > >
  0008e	83 c4 04	 add	 esp, 4
  00091	8b f0		 mov	 esi, eax
  00093	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	e8 00 00 00 00	 call	 ?_Myproxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Myproxy
  0009b	8b 00		 mov	 eax, DWORD PTR [eax]
  0009d	89 30		 mov	 DWORD PTR [eax], esi

; 550  : 		}

  0009f	52		 push	 edx
  000a0	8b cd		 mov	 ecx, ebp
  000a2	50		 push	 eax
  000a3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  000a9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ae	58		 pop	 eax
  000af	5a		 pop	 edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b6	33 cd		 xor	 ecx, ebp
  000b8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bd	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  000c3	3b ec		 cmp	 ebp, esp
  000c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
  000ce	66 90		 npad	 2
$LN5@Alloc_prox:
  000d0	01 00 00 00	 DD	 1
  000d4	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000d8	eb ff ff ff	 DD	 -21			; ffffffebH
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000e4	5f		 DB	 95			; 0000005fH
  000e5	50		 DB	 80			; 00000050H
  000e6	72		 DB	 114			; 00000072H
  000e7	6f		 DB	 111			; 0000006fH
  000e8	78		 DB	 120			; 00000078H
  000e9	79		 DB	 121			; 00000079H
  000ea	5f		 DB	 95			; 0000005fH
  000eb	61		 DB	 97			; 00000061H
  000ec	6c		 DB	 108			; 0000006cH
  000ed	6c		 DB	 108			; 0000006cH
  000ee	6f		 DB	 111			; 0000006fH
  000ef	63		 DB	 99			; 00000063H
  000f0	61		 DB	 97			; 00000061H
  000f1	74		 DB	 116			; 00000074H
  000f2	6f		 DB	 111			; 0000006fH
  000f3	72		 DB	 114			; 00000072H
  000f4	00		 DB	 0
?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ??1?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::~_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >, COMDAT
; _this$ = ecx

; 504  : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 505  : 		_Free_proxy();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Free_proxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Free_proxy

; 506  : 		}

  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@XZ
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::~_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >, COMDAT
; _this$ = ecx

; 490  : 		{	// default construct allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 489  : 		: _Mypair(_Zero_then_variadic_args_t())

  00042	0f b6 85 23 ff
	ff ff		 movzx	 eax, BYTE PTR $T2[ebp]
  00049	50		 push	 eax
  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1>::_Compressed_pair<std::allocator<Engine::Graphics::BufferElement>,std::_Vector_val<std::_Simple_types<Engine::Graphics::BufferElement> >,1><>
  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 491  : 		_Alloc_proxy();

  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Alloc_proxy

; 492  : 		}

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@V?$allocator@UBufferElement@Graphics@Engine@@@std@@V?$_Vector_val@U?$_Simple_types@UBufferElement@Graphics@Engine@@@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_Vector_alloc@U?$_Vec_base_types@UBufferElement@Graphics@Engine@@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >::_Vector_alloc<std::_Vec_base_types<Engine::Graphics::BufferElement,std::allocator<Engine::Graphics::BufferElement> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@SA?AV?$allocator@UBufferElement@Graphics@Engine@@@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@SA?AV?$allocator@UBufferElement@Graphics@Engine@@@2@ABV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<Engine::Graphics::BufferElement> >::select_on_container_copy_construction, COMDAT

; 960  : 		{	// get allocator to use

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 961  : 		return (_Al);

  0001e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]

; 962  : 		}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@SA?AV?$allocator@UBufferElement@Graphics@Engine@@@2@ABV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Engine::Graphics::BufferElement> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@SAIABV?$allocator@UBufferElement@Graphics@Engine@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@SAIABV?$allocator@UBufferElement@Graphics@Engine@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<Engine::Graphics::BufferElement> >::max_size, COMDAT

; 955  : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 956  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

  0001e	b8 ff ff ff 0f	 mov	 eax, 268435455		; 0fffffffH

; 957  : 		}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@UBufferElement@Graphics@Engine@@@std@@@std@@SAIABV?$allocator@UBufferElement@Graphics@Engine@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<Engine::Graphics::BufferElement> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?allocate@?$allocator@UBufferElement@Graphics@Engine@@@std@@QAEPAUBufferElement@Graphics@Engine@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@UBufferElement@Graphics@Engine@@@std@@QAEPAUBufferElement@Graphics@Engine@@I@Z PROC ; std::allocator<Engine::Graphics::BufferElement>::allocate, COMDAT
; _this$ = ecx

; 1054 : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1055 : 		return (static_cast<_Ty *>(_Allocate(_Count, sizeof(_Ty), alignof(_Ty))));

  00023	6a 04		 push	 4
  00025	6a 10		 push	 16			; 00000010H
  00027	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??$_Allocate@U?$_Default_allocate_traits@$00@std@@@std@@YAPAXIII@Z ; std::_Allocate<std::_Default_allocate_traits<1> >
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1056 : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?allocate@?$allocator@UBufferElement@Graphics@Engine@@@std@@QAEPAUBufferElement@Graphics@Engine@@I@Z ENDP ; std::allocator<Engine::Graphics::BufferElement>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?deallocate@?$allocator@UBufferElement@Graphics@Engine@@@std@@QAEXQAUBufferElement@Graphics@Engine@@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@UBufferElement@Graphics@Engine@@@std@@QAEXQAUBufferElement@Graphics@Engine@@I@Z PROC ; std::allocator<Engine::Graphics::BufferElement>::deallocate, COMDAT
; _this$ = ecx

; 1049 : 		{	// deallocate object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1050 : 		_Deallocate(_Ptr, _Count, sizeof(_Ty), alignof(_Ty));

  00023	6a 04		 push	 4
  00025	6a 10		 push	 16			; 00000010H
  00027	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ?_Deallocate@std@@YAXPAXIII@Z ; std::_Deallocate
  00034	83 c4 10	 add	 esp, 16			; 00000010H

; 1051 : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
?deallocate@?$allocator@UBufferElement@Graphics@Engine@@@std@@QAEXQAUBufferElement@Graphics@Engine@@I@Z ENDP ; std::allocator<Engine::Graphics::BufferElement>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??0?$allocator@UBufferElement@Graphics@Engine@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@UBufferElement@Graphics@Engine@@@std@@QAE@XZ PROC ; std::allocator<Engine::Graphics::BufferElement>::allocator<Engine::Graphics::BufferElement>, COMDAT
; _this$ = ecx

; 1038 : 	allocator() _NOEXCEPT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1039 : 		{	// construct default allocator (do nothing)
; 1040 : 		}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@UBufferElement@Graphics@Engine@@@std@@QAE@XZ ENDP ; std::allocator<Engine::Graphics::BufferElement>::allocator<Engine::Graphics::BufferElement>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@Shader@Graphics@Engine@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@Shader@Graphics@Engine@@QAEXI@Z PROC	; Engine::Graphics::Shader::__autoclassinit2, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 45 08	 mov	 eax, DWORD PTR _classSize$[ebp]
  00026	50		 push	 eax
  00027	6a 00		 push	 0
  00029	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003e	3b ec		 cmp	 ebp, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	8b e5		 mov	 esp, ebp
  00047	5d		 pop	 ebp
  00048	c2 04 00	 ret	 4
?__autoclassinit2@Shader@Graphics@Engine@@QAEXI@Z ENDP	; Engine::Graphics::Shader::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 3710 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 3711 : 		_Xlength_error("string too long");

  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long?$AA@
  00023	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 3712 : 		}

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00031	3b ec		 cmp	 ebp, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@SAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -245						; size = 1
__Al$2 = -44						; size = 4
__Ptr$3 = -32						; size = 4
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 3691 : 		{	// initialize buffer, deallocating any storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00013	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3692 : 		this->_Orphan_all();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all

; 3693 : 		auto& _My_data = this->_Get_data();

  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  00033	89 45 ec	 mov	 DWORD PTR __My_data$[ebp], eax

; 3694 : 		if (_My_data._Large_string_engaged())

  00036	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$[ebp]
  00039	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  0003e	0f b6 c0	 movzx	 eax, al
  00041	85 c0		 test	 eax, eax
  00043	74 46		 je	 SHORT $LN2@Tidy_deall

; 3695 : 			{
; 3696 : 			const pointer _Ptr = _My_data._Bx._Ptr;

  00045	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  00048	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004b	89 4d e0	 mov	 DWORD PTR __Ptr$3[ebp], ecx

; 3697 : 			auto& _Al = this->_Getal();

  0004e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$allocator@D@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00056	89 45 d4	 mov	 DWORD PTR __Al$2[ebp], eax

; 3698 : 			_Alty_traits::destroy(_Al, _STD addressof(_My_data._Bx._Ptr));

  00059	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  0005c	83 c0 04	 add	 eax, 4
  0005f	50		 push	 eax
  00060	e8 00 00 00 00	 call	 ??$addressof@PAD@std@@YAPAPADAAPAD@Z ; std::addressof<char *>
  00065	83 c4 04	 add	 esp, 4
  00068	50		 push	 eax
  00069	8b 4d d4	 mov	 ecx, DWORD PTR __Al$2[ebp]
  0006c	51		 push	 ecx
  0006d	e8 00 00 00 00	 call	 ??$destroy@PAD@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAXAAV?$allocator@D@1@QAPAD@Z ; std::_Default_allocator_traits<std::allocator<char> >::destroy<char *>
  00072	83 c4 08	 add	 esp, 8

; 3699 : 			_Al.deallocate(_Ptr, _My_data._Myres + 1);

  00075	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  00078	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0007b	83 c1 01	 add	 ecx, 1
  0007e	51		 push	 ecx
  0007f	8b 55 e0	 mov	 edx, DWORD PTR __Ptr$3[ebp]
  00082	52		 push	 edx
  00083	8b 4d d4	 mov	 ecx, DWORD PTR __Al$2[ebp]
  00086	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
$LN2@Tidy_deall:

; 3700 : 			}
; 3701 : 
; 3702 : 		_My_data._Mysize = 0;

  0008b	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  0008e	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 3703 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00095	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  00098	c7 40 18 0f 00
	00 00		 mov	 DWORD PTR [eax+24], 15	; 0000000fH

; 3704 : 		// the _Traits::assign is last so the codegen doesn't think the char
; 3705 : 		// write can alias this
; 3706 : 		_Traits::assign(_My_data._Bx._Buf[0], _Elem());

  0009f	c6 85 0b ff ff
	ff 00		 mov	 BYTE PTR $T1[ebp], 0
  000a6	8d 85 0b ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  000ac	50		 push	 eax
  000ad	b9 01 00 00 00	 mov	 ecx, 1
  000b2	6b d1 00	 imul	 edx, ecx, 0
  000b5	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  000b8	8d 4c 10 04	 lea	 ecx, DWORD PTR [eax+edx+4]
  000bc	51		 push	 ecx
  000bd	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
  000c2	83 c4 08	 add	 esp, 8

; 3707 : 		}

  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000ce	3b ec		 cmp	 ebp, esp
  000d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000d5	8b e5		 mov	 esp, ebp
  000d7	5d		 pop	 ebp
  000d8	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -221						; size = 1
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT
; _this$ = ecx

; 3681 : 		{	// initialize basic_string data members

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e4 00 00
	00		 sub	 esp, 228		; 000000e4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00013	b9 39 00 00 00	 mov	 ecx, 57			; 00000039H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 3682 : 		auto& _My_data = this->_Get_data();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0002b	89 45 ec	 mov	 DWORD PTR __My_data$[ebp], eax

; 3683 : 		_My_data._Mysize = 0;

  0002e	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  00031	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 3684 : 		_My_data._Myres = this->_BUF_SIZE - 1;

  00038	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  0003b	c7 40 18 0f 00
	00 00		 mov	 DWORD PTR [eax+24], 15	; 0000000fH

; 3685 : 		// the _Traits::assign is last so the codegen doesn't think the char
; 3686 : 		// write can alias this
; 3687 : 		_Traits::assign(_My_data._Bx._Buf[0], _Elem());

  00042	c6 85 23 ff ff
	ff 00		 mov	 BYTE PTR $T1[ebp], 0
  00049	8d 85 23 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0004f	50		 push	 eax
  00050	b9 01 00 00 00	 mov	 ecx, 1
  00055	6b d1 00	 imul	 edx, ecx, 0
  00058	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  0005b	8d 4c 10 04	 lea	 ecx, DWORD PTR [eax+edx+4]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
  00065	83 c4 08	 add	 esp, 8

; 3688 : 		}

  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  00071	3b ec		 cmp	 ebp, esp
  00073	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00078	8b e5		 mov	 esp, ebp
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEII@Z
_TEXT	SEGMENT
$T1 = -264						; size = 4
__Old$ = -60						; size = 4
__Masked$ = -48						; size = 4
__My_data$ = -36					; size = 4
__Max$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Requested$ = 8					; size = 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 3573 : 		{	// determines the next array size to allocate

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00013	b9 43 00 00 00	 mov	 ecx, 67			; 00000043H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 3574 : 		const size_type _Max = max_size();

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00035	89 45 e8	 mov	 DWORD PTR __Max$[ebp], eax

; 3575 : 		auto& _My_data = this->_Get_data();

  00038	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  00040	89 45 dc	 mov	 DWORD PTR __My_data$[ebp], eax

; 3576 : 		const size_type _Masked = _Requested | this->_ALLOC_MASK;

  00043	8b 45 08	 mov	 eax, DWORD PTR __Requested$[ebp]
  00046	83 c8 0f	 or	 eax, 15			; 0000000fH
  00049	89 45 d0	 mov	 DWORD PTR __Masked$[ebp], eax

; 3577 : 		if (_Masked > _Max)

  0004c	8b 45 d0	 mov	 eax, DWORD PTR __Masked$[ebp]
  0004f	3b 45 e8	 cmp	 eax, DWORD PTR __Max$[ebp]
  00052	76 05		 jbe	 SHORT $LN2@Calculate_

; 3578 : 			{	// the mask overflows, settle for max_size()
; 3579 : 			return (_Max);

  00054	8b 45 e8	 mov	 eax, DWORD PTR __Max$[ebp]
  00057	eb 40		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 3580 : 			}
; 3581 : 
; 3582 : 		const size_type _Old = _My_data._Myres;

  00059	8b 45 dc	 mov	 eax, DWORD PTR __My_data$[ebp]
  0005c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0005f	89 4d c4	 mov	 DWORD PTR __Old$[ebp], ecx

; 3583 : 		if (_Old > _Max - _Old / 2)

  00062	8b 45 c4	 mov	 eax, DWORD PTR __Old$[ebp]
  00065	d1 e8		 shr	 eax, 1
  00067	8b 4d e8	 mov	 ecx, DWORD PTR __Max$[ebp]
  0006a	2b c8		 sub	 ecx, eax
  0006c	39 4d c4	 cmp	 DWORD PTR __Old$[ebp], ecx
  0006f	76 05		 jbe	 SHORT $LN3@Calculate_

; 3584 : 			{	// similarly, geometric overflows
; 3585 : 			return (_Max);

  00071	8b 45 e8	 mov	 eax, DWORD PTR __Max$[ebp]
  00074	eb 23		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 3586 : 			}
; 3587 : 
; 3588 : 		return (_Max_value(_Masked, _Old + _Old / 2));

  00076	8b 45 c4	 mov	 eax, DWORD PTR __Old$[ebp]
  00079	d1 e8		 shr	 eax, 1
  0007b	03 45 c4	 add	 eax, DWORD PTR __Old$[ebp]
  0007e	89 85 f8 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  00084	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  0008a	51		 push	 ecx
  0008b	8d 55 d0	 lea	 edx, DWORD PTR __Masked$[ebp]
  0008e	52		 push	 edx
  0008f	e8 00 00 00 00	 call	 ??$_Max_value@I@std@@YAABIABI0@Z ; std::_Max_value<unsigned int>
  00094	83 c4 08	 add	 esp, 8
  00097	8b 00		 mov	 eax, DWORD PTR [eax]
$LN1@Calculate_:

; 3589 : 		}

  00099	52		 push	 edx
  0009a	8b cd		 mov	 ecx, ebp
  0009c	50		 push	 eax
  0009d	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN7@Calculate_
  000a3	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a8	58		 pop	 eax
  000a9	5a		 pop	 edx
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b0	33 cd		 xor	 ecx, ebp
  000b2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b7	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  000bd	3b ec		 cmp	 ebp, esp
  000bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c4	8b e5		 mov	 esp, ebp
  000c6	5d		 pop	 ebp
  000c7	c2 04 00	 ret	 4
  000ca	66 90		 npad	 2
$LN7@Calculate_:
  000cc	01 00 00 00	 DD	 1
  000d0	00 00 00 00	 DD	 $LN6@Calculate_
$LN6@Calculate_:
  000d4	d0 ff ff ff	 DD	 -48			; ffffffd0H
  000d8	04 00 00 00	 DD	 4
  000dc	00 00 00 00	 DD	 $LN5@Calculate_
$LN5@Calculate_:
  000e0	5f		 DB	 95			; 0000005fH
  000e1	4d		 DB	 77			; 0000004dH
  000e2	61		 DB	 97			; 00000061H
  000e3	73		 DB	 115			; 00000073H
  000e4	6b		 DB	 107			; 0000006bH
  000e5	65		 DB	 101			; 00000065H
  000e6	64		 DB	 100			; 00000064H
  000e7	00		 DB	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -264						; size = 4
$T2 = -252						; size = 4
$T3 = -240						; size = 4
__Storage_max$ = -36					; size = 4
__Alloc_max$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 3051 : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd f4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-268]
  00013	b9 43 00 00 00	 mov	 ecx, 67			; 00000043H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 3052 : 		const size_type _Alloc_max = _Alty_traits::max_size(this->_Getal());

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$allocator@D@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  0003b	83 c4 04	 add	 esp, 4
  0003e	89 45 e8	 mov	 DWORD PTR __Alloc_max$[ebp], eax

; 3053 : 		const size_type _Storage_max = // can always store small string
; 3054 : 			_Max_value(_Alloc_max, static_cast<size_type>(this->_BUF_SIZE));

  00041	c7 85 10 ff ff
	ff 10 00 00 00	 mov	 DWORD PTR $T3[ebp], 16	; 00000010H
  0004b	8d 85 10 ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00051	50		 push	 eax
  00052	8d 4d e8	 lea	 ecx, DWORD PTR __Alloc_max$[ebp]
  00055	51		 push	 ecx
  00056	e8 00 00 00 00	 call	 ??$_Max_value@I@std@@YAABIABI0@Z ; std::_Max_value<unsigned int>
  0005b	83 c4 08	 add	 esp, 8
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	89 55 dc	 mov	 DWORD PTR __Storage_max$[ebp], edx

; 3055 : 		return (_Min_value(

  00063	8b 45 dc	 mov	 eax, DWORD PTR __Storage_max$[ebp]
  00066	83 e8 01	 sub	 eax, 1
  00069	89 85 04 ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0006f	e8 00 00 00 00	 call	 ?max@?$numeric_limits@H@std@@SAHXZ ; std::numeric_limits<int>::max
  00074	89 85 f8 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0007a	8d 8d 04 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00080	51		 push	 ecx
  00081	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR $T1[ebp]
  00087	52		 push	 edx
  00088	e8 00 00 00 00	 call	 ??$_Min_value@I@std@@YAABIABI0@Z ; std::_Min_value<unsigned int>
  0008d	83 c4 08	 add	 esp, 8
  00090	8b 00		 mov	 eax, DWORD PTR [eax]

; 3056 : 			static_cast<size_type>((numeric_limits<difference_type>::max)()),
; 3057 : 			_Storage_max - 1 // -1 is for null terminator and/or npos
; 3058 : 			));
; 3059 : 
; 3060 : 		}

  00092	52		 push	 edx
  00093	8b cd		 mov	 ecx, ebp
  00095	50		 push	 eax
  00096	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@max_size
  0009c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a1	58		 pop	 eax
  000a2	5a		 pop	 edx
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000a9	33 cd		 xor	 ecx, ebp
  000ab	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b0	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  000b6	3b ec		 cmp	 ebp, esp
  000b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000bd	8b e5		 mov	 esp, ebp
  000bf	5d		 pop	 ebp
  000c0	c3		 ret	 0
  000c1	0f 1f 00	 npad	 3
$LN5@max_size:
  000c4	01 00 00 00	 DD	 1
  000c8	00 00 00 00	 DD	 $LN4@max_size
$LN4@max_size:
  000cc	e8 ff ff ff	 DD	 -24			; ffffffe8H
  000d0	04 00 00 00	 DD	 4
  000d4	00 00 00 00	 DD	 $LN3@max_size
$LN3@max_size:
  000d8	5f		 DB	 95			; 0000005fH
  000d9	41		 DB	 65			; 00000041H
  000da	6c		 DB	 108			; 0000006cH
  000db	6c		 DB	 108			; 0000006cH
  000dc	6f		 DB	 111			; 0000006fH
  000dd	63		 DB	 99			; 00000063H
  000de	5f		 DB	 95			; 0000005fH
  000df	6d		 DB	 109			; 0000006dH
  000e0	61		 DB	 97			; 00000061H
  000e1	78		 DB	 120			; 00000078H
  000e2	00		 DB	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2436 : 		{	// assign [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2437 : 		return (assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr))));

  00023	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?length@?$char_traits@D@std@@SAIQBD@Z ; std::char_traits<char>::length
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??$_Convert_size@I@std@@YAII@Z ; std::_Convert_size<unsigned int>
  00035	83 c4 04	 add	 esp, 4
  00038	50		 push	 eax
  00039	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0003c	51		 push	 ecx
  0003d	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2438 : 		}

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0004e	3b ec		 cmp	 ebp, esp
  00050	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00055	8b e5		 mov	 esp, ebp
  00057	5d		 pop	 ebp
  00058	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
$T1 = -245						; size = 1
$T2 = -233						; size = 1
__Old_ptr$3 = -32					; size = 4
__My_data$ = -20					; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 2418 : 		{	// assign [_Ptr, _Ptr + _Count)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00013	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 2419 : 		auto& _My_data = this->_Get_data();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0002b	89 45 ec	 mov	 DWORD PTR __My_data$[ebp], eax

; 2420 : 		if (_Count <= _My_data._Myres)

  0002e	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  00031	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  00034	3b 48 18	 cmp	 ecx, DWORD PTR [eax+24]
  00037	77 4a		 ja	 SHORT $LN2@assign

; 2421 : 			{
; 2422 : 			_Elem * const _Old_ptr = _My_data._Myptr();

  00039	8b 4d ec	 mov	 ecx, DWORD PTR __My_data$[ebp]
  0003c	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00041	89 45 e0	 mov	 DWORD PTR __Old_ptr$3[ebp], eax

; 2423 : 			_My_data._Mysize = _Count;

  00044	8b 45 ec	 mov	 eax, DWORD PTR __My_data$[ebp]
  00047	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  0004a	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 2424 : 			_Traits::move(_Old_ptr, _Ptr, _Count);

  0004d	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00050	50		 push	 eax
  00051	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00054	51		 push	 ecx
  00055	8b 55 e0	 mov	 edx, DWORD PTR __Old_ptr$3[ebp]
  00058	52		 push	 edx
  00059	e8 00 00 00 00	 call	 ?move@?$char_traits@D@std@@SAPADQADQBDI@Z ; std::char_traits<char>::move
  0005e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2425 : 			_Traits::assign(_Old_ptr[_Count], _Elem());

  00061	c6 85 17 ff ff
	ff 00		 mov	 BYTE PTR $T2[ebp], 0
  00068	8d 85 17 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  0006e	50		 push	 eax
  0006f	8b 4d e0	 mov	 ecx, DWORD PTR __Old_ptr$3[ebp]
  00072	03 4d 0c	 add	 ecx, DWORD PTR __Count$[ebp]
  00075	51		 push	 ecx
  00076	e8 00 00 00 00	 call	 ?assign@?$char_traits@D@std@@SAXAADABD@Z ; std::char_traits<char>::assign
  0007b	83 c4 08	 add	 esp, 8

; 2426 : 			return (*this);

  0007e	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00081	eb 20		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2427 : 			}
; 2428 : 
; 2429 : 		return (_Reallocate_for(_Count, [](_Elem * const _New_ptr, const size_type _Count, const _Elem * const _Ptr) {

  00083	33 c0		 xor	 eax, eax
  00085	88 85 0b ff ff
	ff		 mov	 BYTE PTR $T1[ebp], al
  0008b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0008e	51		 push	 ecx
  0008f	0f b6 95 0b ff
	ff ff		 movzx	 edx, BYTE PTR $T1[ebp]
  00096	52		 push	 edx
  00097	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0009a	50		 push	 eax
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0009e	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@IV<lambda_9366063389c5f42a00a5088cf24e69de>@@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<<lambda_9366063389c5f42a00a5088cf24e69de>,char const *>
$LN1@assign:

; 2430 : 			_Traits::copy(_New_ptr, _Ptr, _Count);
; 2431 : 			_Traits::assign(_New_ptr[_Count], _Elem());
; 2432 : 			}, _Ptr));
; 2433 : 		}

  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000ac	3b ec		 cmp	 ebp, esp
  000ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b3	8b e5		 mov	 esp, ebp
  000b5	5d		 pop	 ebp
  000b6	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2230 : 		{	// destroy the string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 2231 : 		_Tidy_deallocate();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2232 : 		}

  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 1962 : 		{	// construct from [_Ptr, <null>)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1961 : 		: _Mybase()

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1963 : 		_Tidy_init();

  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 1964 : 		assign(_Ptr);

  00059	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 1965 : 		}

  00065	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00072	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00079	59		 pop	 ecx
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi
  0007c	5b		 pop	 ebx
  0007d	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00083	3b ec		 cmp	 ebp, esp
  00085	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0008a	8b e5		 mov	 esp, ebp
  0008c	5d		 pop	 ebp
  0008d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 351  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 352  : 		return (_Myval2);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 353  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 346  : 		{	// return reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 347  : 		return (_Myval2);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 348  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 331  : 		{	// return const reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 332  : 		return (*this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 333  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 326  : 		{	// return reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 327  : 		return (*this);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]

; 328  : 		}

  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 1826 : 		{	// return const reference to _String_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1827 : 		return (_Mypair._Get_second());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second

; 1828 : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data, COMDAT
; _this$ = ecx

; 1821 : 		{	// return reference to _String_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1822 : 		return (_Mypair._Get_second());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_second

; 1823 : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$allocator@D@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 1816 : 		{	// return const reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1817 : 		return (_Mypair._Get_first());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 1818 : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QBEABV?$allocator@D@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$allocator@D@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal, COMDAT
; _this$ = ecx

; 1811 : 		{	// return reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1812 : 		return (_Mypair._Get_first());

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 1813 : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$allocator@D@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 1801 : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1802 : 		_Get_data()._Orphan_all();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  0002b	8b c8		 mov	 ecx, eax
  0002d	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1803 : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy, COMDAT
; _this$ = ecx

; 1790 : 		{	// return reference to _Myproxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1791 : 		return (_Get_data()._Myproxy);

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data

; 1792 : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Proxy_allocator$ = -21				; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy, COMDAT
; _this$ = ecx

; 1776 : 		{	// destroy proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec dc 00 00
	00		 sub	 esp, 220		; 000000dcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 24 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-220]
  00013	b9 37 00 00 00	 mov	 ecx, 55			; 00000037H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1777 : 		_Alproxy _Proxy_allocator(_Getal());

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$allocator@D@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00035	50		 push	 eax
  00036	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00039	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>

; 1778 : 		_Orphan_all();

  0003e	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00041	e8 00 00 00 00	 call	 ?_Orphan_all@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Orphan_all

; 1779 : 		_Alproxy_traits::destroy(_Proxy_allocator, _Myproxy());

  00046	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  0004e	8b 00		 mov	 eax, DWORD PTR [eax]
  00050	50		 push	 eax
  00051	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00054	51		 push	 ecx
  00055	e8 00 00 00 00	 call	 ??$destroy@U_Container_proxy@std@@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::destroy<std::_Container_proxy>
  0005a	83 c4 08	 add	 esp, 8

; 1780 : 		_Deallocate_plain(_Proxy_allocator, _Myproxy());

  0005d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  00065	8b 00		 mov	 eax, DWORD PTR [eax]
  00067	50		 push	 eax
  00068	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@$0A@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy>,0>
  00071	83 c4 08	 add	 esp, 8

; 1781 : 		_Myproxy() = 0;

  00074	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  0007c	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1782 : 		}

  00082	52		 push	 edx
  00083	8b cd		 mov	 ecx, ebp
  00085	50		 push	 eax
  00086	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Free_proxy
  0008c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00091	58		 pop	 eax
  00092	5a		 pop	 edx
  00093	5f		 pop	 edi
  00094	5e		 pop	 esi
  00095	5b		 pop	 ebx
  00096	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00099	33 cd		 xor	 ecx, ebp
  0009b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a0	81 c4 dc 00 00
	00		 add	 esp, 220		; 000000dcH
  000a6	3b ec		 cmp	 ebp, esp
  000a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c3		 ret	 0
  000b1	0f 1f 00	 npad	 3
$LN5@Free_proxy:
  000b4	01 00 00 00	 DD	 1
  000b8	00 00 00 00	 DD	 $LN4@Free_proxy
$LN4@Free_proxy:
  000bc	eb ff ff ff	 DD	 -21			; ffffffebH
  000c0	01 00 00 00	 DD	 1
  000c4	00 00 00 00	 DD	 $LN3@Free_proxy
$LN3@Free_proxy:
  000c8	5f		 DB	 95			; 0000005fH
  000c9	50		 DB	 80			; 00000050H
  000ca	72		 DB	 114			; 00000072H
  000cb	6f		 DB	 111			; 0000006fH
  000cc	78		 DB	 120			; 00000078H
  000cd	79		 DB	 121			; 00000079H
  000ce	5f		 DB	 95			; 0000005fH
  000cf	61		 DB	 97			; 00000061H
  000d0	6c		 DB	 108			; 0000006cH
  000d1	6c		 DB	 108			; 0000006cH
  000d2	6f		 DB	 111			; 0000006fH
  000d3	63		 DB	 99			; 00000063H
  000d4	61		 DB	 97			; 00000061H
  000d5	74		 DB	 116			; 00000074H
  000d6	6f		 DB	 111			; 0000006fH
  000d7	72		 DB	 114			; 00000072H
  000d8	00		 DB	 0
?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
$T1 = -232						; size = 8
__Proxy_allocator$ = -21				; size = 1
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy, COMDAT
; _this$ = ecx

; 1768 : 		{	// construct proxy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 14 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-236]
  00013	b9 3b 00 00 00	 mov	 ecx, 59			; 0000003bH
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00025	33 c5		 xor	 eax, ebp
  00027	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  0002a	89 4d f4	 mov	 DWORD PTR _this$[ebp], ecx

; 1769 : 		_Alproxy _Proxy_allocator(_Getal());

  0002d	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00030	e8 00 00 00 00	 call	 ?_Getal@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$allocator@D@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Getal
  00035	50		 push	 eax
  00036	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00039	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>

; 1770 : 		_Myproxy() = _Unfancy(_Proxy_allocator.allocate(1));

  0003e	6a 01		 push	 1
  00040	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00043	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0004e	83 c4 04	 add	 esp, 4
  00051	8b f0		 mov	 esi, eax
  00053	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  0005b	89 30		 mov	 DWORD PTR [eax], esi

; 1771 : 		_Alproxy_traits::construct(_Proxy_allocator, _Myproxy(), _Container_proxy());

  0005d	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00063	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QAE@XZ ; std::_Container_proxy::_Container_proxy
  00068	50		 push	 eax
  00069	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  00071	8b 00		 mov	 eax, DWORD PTR [eax]
  00073	50		 push	 eax
  00074	8d 4d eb	 lea	 ecx, DWORD PTR __Proxy_allocator$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ??$construct@U_Container_proxy@std@@U12@@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@1@QAU_Container_proxy@1@$$QAU31@@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::construct<std::_Container_proxy,std::_Container_proxy>
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1772 : 		_Myproxy()->_Mycont = _STD addressof(_Get_data());

  00080	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	e8 00 00 00 00	 call	 ?_Get_data@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAV?$_String_val@U?$_Simple_types@D@std@@@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Get_data
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  0008e	83 c4 04	 add	 esp, 4
  00091	8b f0		 mov	 esi, eax
  00093	8b 4d f4	 mov	 ecx, DWORD PTR _this$[ebp]
  00096	e8 00 00 00 00	 call	 ?_Myproxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEAAPAU_Container_proxy@2@XZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Myproxy
  0009b	8b 00		 mov	 eax, DWORD PTR [eax]
  0009d	89 30		 mov	 DWORD PTR [eax], esi

; 1773 : 		}

  0009f	52		 push	 edx
  000a0	8b cd		 mov	 ecx, ebp
  000a2	50		 push	 eax
  000a3	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@Alloc_prox
  000a9	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000ae	58		 pop	 eax
  000af	5a		 pop	 edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b6	33 cd		 xor	 ecx, ebp
  000b8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bd	81 c4 ec 00 00
	00		 add	 esp, 236		; 000000ecH
  000c3	3b ec		 cmp	 ebp, esp
  000c5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ca	8b e5		 mov	 esp, ebp
  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
  000ce	66 90		 npad	 2
$LN5@Alloc_prox:
  000d0	01 00 00 00	 DD	 1
  000d4	00 00 00 00	 DD	 $LN4@Alloc_prox
$LN4@Alloc_prox:
  000d8	eb ff ff ff	 DD	 -21			; ffffffebH
  000dc	01 00 00 00	 DD	 1
  000e0	00 00 00 00	 DD	 $LN3@Alloc_prox
$LN3@Alloc_prox:
  000e4	5f		 DB	 95			; 0000005fH
  000e5	50		 DB	 80			; 00000050H
  000e6	72		 DB	 114			; 00000072H
  000e7	6f		 DB	 111			; 0000006fH
  000e8	78		 DB	 120			; 00000078H
  000e9	79		 DB	 121			; 00000079H
  000ea	5f		 DB	 95			; 0000005fH
  000eb	61		 DB	 97			; 00000061H
  000ec	6c		 DB	 108			; 0000006cH
  000ed	6c		 DB	 108			; 0000006cH
  000ee	6f		 DB	 111			; 0000006fH
  000ef	63		 DB	 99			; 00000063H
  000f0	61		 DB	 97			; 00000061H
  000f1	74		 DB	 116			; 00000074H
  000f2	6f		 DB	 111			; 0000006fH
  000f3	72		 DB	 114			; 00000072H
  000f4	00		 DB	 0
?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 1727 : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1728 : 		_Free_proxy();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Free_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Free_proxy

; 1729 : 		}

  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
  00052	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00055	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0005c	59		 pop	 ecx
  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00066	3b ec		 cmp	 ebp, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::~_String_alloc<std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ PROC ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >, COMDAT
; _this$ = ecx

; 1713 : 		{	// default construct allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 1c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-228]
  00021	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 1712 : 		: _Mypair(_Zero_then_variadic_args_t())

  00042	0f b6 85 23 ff
	ff ff		 movzx	 eax, BYTE PTR $T2[ebp]
  00049	50		 push	 eax
  0004a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0004d	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  00052	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1714 : 		_Alloc_proxy();

  00059	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Alloc_proxy@?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAEXXZ ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_Alloc_proxy

; 1715 : 		}

  00061	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00068	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0006b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0006e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00075	59		 pop	 ecx
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	81 c4 e4 00 00
	00		 add	 esp, 228		; 000000e4H
  0007f	3b ec		 cmp	 ebp, esp
  00081	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__ehhandler$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 18 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-232]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_String_alloc@U?$_String_base_types@DV?$allocator@D@std@@@std@@@std@@QAE@XZ ENDP ; std::_String_alloc<std::_String_base_types<char,std::allocator<char> > >::_String_alloc<std::_String_base_types<char,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx
  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	83 c1 04	 add	 ecx, 4
  00029	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	e8 00 00 00 00	 call	 ??1_Container_base12@std@@QAE@XZ ; std::_Container_base12::~_Container_base12
  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003f	3b ec		 cmp	 ebp, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00046	8b e5		 mov	 esp, ebp
  00048	5d		 pop	 ebp
  00049	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 1640 : 			{	// user-provided, for fancy pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1641 : 			}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx

; 1635 : 		_Bxty()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1636 : 			{	// user-provided, for fancy pointers
; 1637 : 			}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -208						; size = 4
_this$ = -8						; size = 4
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 1603 : 		{	// returns whether the large string mode (allocated memory) is engaged

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00013	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1604 : 		return (_BUF_SIZE <= _Myres);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 78 18 10	 cmp	 DWORD PTR [eax+24], 16	; 00000010H
  0002a	72 0c		 jb	 SHORT $LN3@Large_stri
  0002c	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv66[ebp], 1
  00036	eb 0a		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00038	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv66[ebp], 0
$LN4@Large_stri:
  00042	8a 85 30 ff ff
	ff		 mov	 al, BYTE PTR tv66[ebp]

; 1605 : 		}

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
__Result$ = -20						; size = 4
_this$ = -8						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1581 : 		{	// determine current pointer to buffer for mutable string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00013	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1582 : 		value_type * _Result = _Bx._Buf;

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	83 c0 04	 add	 eax, 4
  00029	89 45 ec	 mov	 DWORD PTR __Result$[ebp], eax

; 1583 : 		if (_Large_string_engaged())

  0002c	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00034	0f b6 c0	 movzx	 eax, al
  00037	85 c0		 test	 eax, eax
  00039	74 12		 je	 SHORT $LN2@Myptr

; 1584 : 			{
; 1585 : 			_Result = _Unfancy(_Bx._Ptr);

  0003b	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0003e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00041	51		 push	 ecx
  00042	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPADPAD@Z ; std::_Unfancy<char>
  00047	83 c4 04	 add	 esp, 4
  0004a	89 45 ec	 mov	 DWORD PTR __Result$[ebp], eax
$LN2@Myptr:

; 1586 : 			}
; 1587 : 
; 1588 : 		return (_Result);

  0004d	8b 45 ec	 mov	 eax, DWORD PTR __Result$[ebp]

; 1589 : 		}

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx

; 1565 : 		{	// initialize values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx
  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QAE@XZ ; std::_Container_base12::_Container_base12
  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 1562 : 		: _Bx(),

  00051	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	83 c1 04	 add	 ecx, 4
  00057	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty

; 1563 : 		_Mysize(0),

  0005c	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0005f	c7 40 14 00 00
	00 00		 mov	 DWORD PTR [eax+20], 0

; 1564 : 		_Myres(0)

  00066	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00069	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 1566 : 		}

  00070	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00077	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00084	59		 pop	 ecx
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0008e	3b ec		 cmp	 ebp, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ$0:
  00000	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1_Container_base12@std@@QAE@XZ ; std::_Container_base12::~_Container_base12
__ehhandler$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  00015	33 c8		 xor	 ecx, eax
  00017	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001c	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
  00021	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 955  : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 956  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

  0001e	83 c8 ff	 or	 eax, -1

; 957  : 		}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 1054 : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1055 : 		return (static_cast<_Ty *>(_Allocate(_Count, sizeof(_Ty), alignof(_Ty))));

  00023	6a 01		 push	 1
  00025	6a 01		 push	 1
  00027	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ??$_Allocate@U?$_Default_allocate_traits@$00@std@@@std@@YAPAXIII@Z ; std::_Allocate<std::_Default_allocate_traits<1> >
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1056 : 		}

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0003c	3b ec		 cmp	 ebp, esp
  0003e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXQADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXQADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 1049 : 		{	// deallocate object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1050 : 		_Deallocate(_Ptr, _Count, sizeof(_Ty), alignof(_Ty));

  00023	6a 01		 push	 1
  00025	6a 01		 push	 1
  00027	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0002e	51		 push	 ecx
  0002f	e8 00 00 00 00	 call	 ?_Deallocate@std@@YAXPAXIII@Z ; std::_Deallocate
  00034	83 c4 10	 add	 esp, 16			; 00000010H

; 1051 : 		}

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00040	3b ec		 cmp	 ebp, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXQADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 1038 : 	allocator() _NOEXCEPT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1039 : 		{	// construct default allocator (do nothing)
; 1040 : 		}

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi
  00028	5b		 pop	 ebx
  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ??$_Convert_size@I@std@@YAII@Z
_TEXT	SEGMENT
__Len$ = 8						; size = 4
??$_Convert_size@I@std@@YAII@Z PROC			; std::_Convert_size<unsigned int>, COMDAT

; 1258 : 	{	// convert size_t to size_t, unchanged

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1259 : 	return (_Len);

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Len$[ebp]

; 1260 : 	}

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??$_Convert_size@I@std@@YAII@Z ENDP			; std::_Convert_size<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xmemory0
;	COMDAT ?_Deallocate@std@@YAXPAXIII@Z
_TEXT	SEGMENT
__Ptr_container$1 = -44					; size = 4
__Ptr_ptr$2 = -32					; size = 4
__Ptr_user$3 = -20					; size = 4
__Allocated_size$4 = -8					; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Sz$ = 16						; size = 4
__Align$ = 20						; size = 4
?_Deallocate@std@@YAXPAXIII@Z PROC			; std::_Deallocate, COMDAT

; 143  : 	{	// deallocate storage for _Count elements of size _Sz with alignment _Align

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00012	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 144  : 	(void)_Align;
; 145  : 
; 146  : 	if (_Count > static_cast<size_t>(-1) / _Sz)

  0001e	83 c8 ff	 or	 eax, -1
  00021	33 d2		 xor	 edx, edx
  00023	f7 75 10	 div	 DWORD PTR __Sz$[ebp]
  00026	39 45 0c	 cmp	 DWORD PTR __Count$[ebp], eax
  00029	76 0a		 jbe	 SHORT $LN2@Deallocate

; 147  : 		{
; 148  : 		goto _Invalid_parameter; // TRANSITION, VSO#359498

  0002b	e9 b7 00 00 00	 jmp	 $_Invalid_parameter$18
  00030	e9 b2 00 00 00	 jmp	 $_Invalid_parameter$18
$LN2@Deallocate:

; 149  : 		}
; 150  : 
; 151  : 		{
; 152  : 		size_t _Allocated_size = _Count * _Sz;

  00035	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00038	0f af 45 10	 imul	 eax, DWORD PTR __Sz$[ebp]
  0003c	89 45 f8	 mov	 DWORD PTR __Allocated_size$4[ebp], eax

; 153  : 
; 154  : #if defined(_M_IX86) || defined(_M_X64)
; 155  : 		// Boost the alignment of big allocations to help autovectorization.
; 156  :  #pragma warning(push)
; 157  :  #pragma warning(disable: 4127) // conditional expression is constant
; 158  :  #pragma warning(disable: 6326) // Potential comparison of a constant with another constant
; 159  : 		if (_Allocated_size >= _Big_allocation_threshold)

  0003f	81 7d f8 00 10
	00 00		 cmp	 DWORD PTR __Allocated_size$4[ebp], 4096 ; 00001000H
  00046	0f 82 89 00 00
	00		 jb	 $LN4@Deallocate

; 160  : 			{
; 161  :  #if _HAS_ALIGNED_NEW // TRANSITION, if constexpr
; 162  : 			if (_Align > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
; 163  : 				{	// allocation will use aligned new
; 164  : 				if /* constexpr */ (__STDCPP_DEFAULT_NEW_ALIGNMENT__ * 2 >= _Big_allocation_alignment)
; 165  : 					{	// There are no valid alignments between __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 166  : 						// and _Big_allocation_alignment; the below conditional is dead.
; 167  : 					}
; 168  : 				else
; 169  : 					{
; 170  : 					if (_Align < _Big_allocation_alignment)
; 171  : 						{	// boost alignment
; 172  : 						_Align = _Big_allocation_alignment;
; 173  : 						}
; 174  : 					}
; 175  : 				}
; 176  : 			else
; 177  :  #endif /* _HAS_ALIGNED_NEW */
; 178  : 				{	// allocation will use unaligned new; boost alignment manually
; 179  : 				if (_Allocated_size + _Non_user_size <= _Allocated_size)

  0004c	8b 45 f8	 mov	 eax, DWORD PTR __Allocated_size$4[ebp]
  0004f	83 c0 27	 add	 eax, 39			; 00000027H
  00052	3b 45 f8	 cmp	 eax, DWORD PTR __Allocated_size$4[ebp]
  00055	77 0a		 ja	 SHORT $LN5@Deallocate

; 180  : 					{
; 181  : 					goto _Invalid_parameter;

  00057	e9 8b 00 00 00	 jmp	 $_Invalid_parameter$18
  0005c	e9 86 00 00 00	 jmp	 $_Invalid_parameter$18
$LN5@Deallocate:

; 182  : 					}
; 183  : 				_Allocated_size += _Non_user_size;

  00061	8b 45 f8	 mov	 eax, DWORD PTR __Allocated_size$4[ebp]
  00064	83 c0 27	 add	 eax, 39			; 00000027H
  00067	89 45 f8	 mov	 DWORD PTR __Allocated_size$4[ebp], eax

; 184  : 
; 185  : 				const uintptr_t _Ptr_user = reinterpret_cast<uintptr_t>(_Ptr);

  0006a	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  0006d	89 45 ec	 mov	 DWORD PTR __Ptr_user$3[ebp], eax

; 186  : 				if ((_Ptr_user & (_Big_allocation_alignment - 1)) != 0)

  00070	8b 45 ec	 mov	 eax, DWORD PTR __Ptr_user$3[ebp]
  00073	83 e0 1f	 and	 eax, 31			; 0000001fH
  00076	74 04		 je	 SHORT $LN7@Deallocate

; 187  : 					{
; 188  : 					goto _Invalid_parameter;

  00078	eb 6d		 jmp	 SHORT $_Invalid_parameter$18
  0007a	eb 6b		 jmp	 SHORT $_Invalid_parameter$18
$LN7@Deallocate:

; 189  : 					}
; 190  : 
; 191  : 				const uintptr_t _Ptr_ptr = _Ptr_user - sizeof(void *);

  0007c	8b 45 ec	 mov	 eax, DWORD PTR __Ptr_user$3[ebp]
  0007f	83 e8 04	 sub	 eax, 4
  00082	89 45 e0	 mov	 DWORD PTR __Ptr_ptr$2[ebp], eax

; 192  : 				const uintptr_t _Ptr_container =
; 193  : 					*reinterpret_cast<uintptr_t *>(_Ptr_ptr);

  00085	8b 45 e0	 mov	 eax, DWORD PTR __Ptr_ptr$2[ebp]
  00088	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008a	89 4d d4	 mov	 DWORD PTR __Ptr_container$1[ebp], ecx

; 194  : 
; 195  :   #ifdef _DEBUG
; 196  : 				// If the following asserts, it likely means that we are performing
; 197  : 				// an aligned delete on memory coming from an unaligned allocation.
; 198  : 				if (reinterpret_cast<uintptr_t *>(_Ptr_ptr)[-1] != _Big_allocation_sentinel)

  0008d	b8 04 00 00 00	 mov	 eax, 4
  00092	6b c8 ff	 imul	 ecx, eax, -1
  00095	8b 55 e0	 mov	 edx, DWORD PTR __Ptr_ptr$2[ebp]
  00098	81 3c 0a fa fa
	fa fa		 cmp	 DWORD PTR [edx+ecx], -84215046 ; fafafafaH
  0009f	74 04		 je	 SHORT $LN9@Deallocate

; 199  : 					{
; 200  : 					goto _Invalid_parameter;

  000a1	eb 44		 jmp	 SHORT $_Invalid_parameter$18
  000a3	eb 42		 jmp	 SHORT $_Invalid_parameter$18
$LN9@Deallocate:

; 201  : 					}
; 202  :   #endif /* _DEBUG */
; 203  : 
; 204  : 				// Extra paranoia on aligned allocation/deallocation
; 205  : 				if (_Ptr_container >= _Ptr_user)

  000a5	8b 45 d4	 mov	 eax, DWORD PTR __Ptr_container$1[ebp]
  000a8	3b 45 ec	 cmp	 eax, DWORD PTR __Ptr_user$3[ebp]
  000ab	72 04		 jb	 SHORT $LN11@Deallocate

; 206  : 					{
; 207  : 					goto _Invalid_parameter;

  000ad	eb 38		 jmp	 SHORT $_Invalid_parameter$18
  000af	eb 36		 jmp	 SHORT $_Invalid_parameter$18
$LN11@Deallocate:

; 208  : 					}
; 209  : 
; 210  :   #ifdef _DEBUG
; 211  : 				if (2 * sizeof(void *) > _Ptr_user - _Ptr_container)

  000b1	8b 45 ec	 mov	 eax, DWORD PTR __Ptr_user$3[ebp]
  000b4	2b 45 d4	 sub	 eax, DWORD PTR __Ptr_container$1[ebp]
  000b7	83 f8 08	 cmp	 eax, 8
  000ba	73 04		 jae	 SHORT $LN13@Deallocate

; 212  :   #else /* _DEBUG */
; 213  : 				if (sizeof(void *) > _Ptr_user - _Ptr_container)
; 214  :   #endif /* _DEBUG */
; 215  : 					{
; 216  : 					goto _Invalid_parameter;

  000bc	eb 29		 jmp	 SHORT $_Invalid_parameter$18
  000be	eb 27		 jmp	 SHORT $_Invalid_parameter$18
$LN13@Deallocate:

; 217  : 					}
; 218  : 
; 219  : 				if (_Ptr_user - _Ptr_container > _Non_user_size)

  000c0	8b 45 ec	 mov	 eax, DWORD PTR __Ptr_user$3[ebp]
  000c3	2b 45 d4	 sub	 eax, DWORD PTR __Ptr_container$1[ebp]
  000c6	83 f8 27	 cmp	 eax, 39			; 00000027H
  000c9	76 04		 jbe	 SHORT $LN15@Deallocate

; 220  : 					{
; 221  : 					goto _Invalid_parameter;

  000cb	eb 1a		 jmp	 SHORT $_Invalid_parameter$18
  000cd	eb 18		 jmp	 SHORT $_Invalid_parameter$18
$LN15@Deallocate:

; 222  : 					}
; 223  : 
; 224  : 				_Ptr = reinterpret_cast<void *>(_Ptr_container);

  000cf	8b 45 d4	 mov	 eax, DWORD PTR __Ptr_container$1[ebp]
  000d2	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
$LN4@Deallocate:

; 225  : 				}
; 226  : 			}
; 227  :  #pragma warning(pop)
; 228  : #endif /* defined(_M_IX86) || defined(_M_X64) */
; 229  : 
; 230  :  #if _HAS_ALIGNED_NEW // TRANSITION, if constexpr
; 231  : 		if (_Align > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
; 232  : 			{
; 233  : 			::operator delete(_Ptr, _Allocated_size, align_val_t{_Align});
; 234  : 			}
; 235  : 		else
; 236  :  #endif /* _HAS_ALIGNED_NEW */
; 237  : 			{
; 238  : 			::operator delete(_Ptr, _Allocated_size);

  000d5	8b 45 f8	 mov	 eax, DWORD PTR __Allocated_size$4[ebp]
  000d8	50		 push	 eax
  000d9	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  000dc	51		 push	 ecx
  000dd	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  000e2	83 c4 08	 add	 esp, 8

; 239  : 			}
; 240  : 		return;

  000e5	eb 2c		 jmp	 SHORT $LN1@Deallocate
$_Invalid_parameter$18:

; 241  : 		}
; 242  : 
; 243  : _Invalid_parameter:
; 244  : 	_SCL_SECURE_INVALID_ARGUMENT_NO_ASSERT;

  000e7	8b f4		 mov	 esi, esp
  000e9	6a 00		 push	 0
  000eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Deallocate@std@@YAXPAXIII@Z@4JA
  000f0	83 c0 65	 add	 eax, 101		; 00000065H
  000f3	50		 push	 eax
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@MDINKKAA@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe?$AAs?$AA?5?$AA?$CI?$AAx?$AA8?$AA6?$AA?$CJ?$AA?2?$AAm?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt@
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_1CC@LOFJFFDB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?$AA@
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe?$AAn?$AAt?$AA?$CC?$AA?$AA@
  00103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00109	83 c4 14	 add	 esp, 20			; 00000014H
  0010c	3b f4		 cmp	 esi, esp
  0010e	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@Deallocate:

; 245  : 	}

  00113	5f		 pop	 edi
  00114	5e		 pop	 esi
  00115	5b		 pop	 ebx
  00116	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0011c	3b ec		 cmp	 ebp, esp
  0011e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00123	8b e5		 mov	 esp, ebp
  00125	5d		 pop	 ebp
  00126	c3		 ret	 0
?_Deallocate@std@@YAXPAXIII@Z ENDP			; std::_Deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$2 = -48						; size = 4
__Lock$3 = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 248  : 	{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 0c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-244]
  00021	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	89 45 f0	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00038	50		 push	 eax
  00039	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0003c	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00042	89 4d e8	 mov	 DWORD PTR _this$[ebp], ecx

; 249  :  #if _ITERATOR_DEBUG_LEVEL == 2
; 250  : 	if (_Myproxy != 0)

  00045	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00048	83 38 00	 cmp	 DWORD PTR [eax], 0
  0004b	74 61		 je	 SHORT $LN6@Orphan_all

; 251  : 		{	// proxy allocated, drain it
; 252  : 		_Lockit _Lock(_LOCK_DEBUG);

  0004d	8b f4		 mov	 esi, esp
  0004f	6a 03		 push	 3
  00051	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$3[ebp]
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
  0005a	3b f4		 cmp	 esi, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 253  : 
; 254  : 		for (_Iterator_base12 **_Pnext = &_Myproxy->_Myfirstiter;

  00061	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00064	8b 08		 mov	 ecx, DWORD PTR [eax]
  00066	83 c1 04	 add	 ecx, 4
  00069	89 4d d0	 mov	 DWORD PTR __Pnext$2[ebp], ecx
  0006c	eb 0d		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:

; 255  : 			*_Pnext != 0; *_Pnext = (*_Pnext)->_Mynextiter)

  0006e	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$2[ebp]
  00071	8b 08		 mov	 ecx, DWORD PTR [eax]
  00073	8b 55 d0	 mov	 edx, DWORD PTR __Pnext$2[ebp]
  00076	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00079	89 02		 mov	 DWORD PTR [edx], eax
$LN4@Orphan_all:
  0007b	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$2[ebp]
  0007e	83 38 00	 cmp	 DWORD PTR [eax], 0
  00081	74 0d		 je	 SHORT $LN3@Orphan_all

; 256  : 			(*_Pnext)->_Myproxy = 0;

  00083	8b 45 d0	 mov	 eax, DWORD PTR __Pnext$2[ebp]
  00086	8b 08		 mov	 ecx, DWORD PTR [eax]
  00088	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  0008e	eb de		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 257  : 		_Myproxy->_Myfirstiter = 0;

  00090	8b 45 e8	 mov	 eax, DWORD PTR _this$[ebp]
  00093	8b 08		 mov	 ecx, DWORD PTR [eax]
  00095	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 258  : 		}

  0009c	8b f4		 mov	 esi, esp
  0009e	8d 4d dc	 lea	 ecx, DWORD PTR __Lock$3[ebp]
  000a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN6@Orphan_all:

; 259  :  #endif /* _ITERATOR_DEBUG_LEVEL == 2 */
; 260  : 	}

  000ae	52		 push	 edx
  000af	8b cd		 mov	 ecx, ebp
  000b1	50		 push	 eax
  000b2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN10@Orphan_all
  000b8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000bd	58		 pop	 eax
  000be	5a		 pop	 edx
  000bf	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000c9	59		 pop	 ecx
  000ca	5f		 pop	 edi
  000cb	5e		 pop	 esi
  000cc	5b		 pop	 ebx
  000cd	8b 4d f0	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d0	33 cd		 xor	 ecx, ebp
  000d2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d7	81 c4 f4 00 00
	00		 add	 esp, 244		; 000000f4H
  000dd	3b ec		 cmp	 ebp, esp
  000df	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e4	8b e5		 mov	 esp, ebp
  000e6	5d		 pop	 ebp
  000e7	c3		 ret	 0
$LN10@Orphan_all:
  000e8	01 00 00 00	 DD	 1
  000ec	00 00 00 00	 DD	 $LN9@Orphan_all
$LN9@Orphan_all:
  000f0	dc ff ff ff	 DD	 -36			; ffffffdcH
  000f4	04 00 00 00	 DD	 4
  000f8	00 00 00 00	 DD	 $LN7@Orphan_all
$LN7@Orphan_all:
  000fc	5f		 DB	 95			; 0000005fH
  000fd	4c		 DB	 76			; 0000004cH
  000fe	6f		 DB	 111			; 0000006fH
  000ff	63		 DB	 99			; 00000063H
  00100	6b		 DB	 107			; 0000006bH
  00101	00		 DB	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 08 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-248]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	8b 4a fc	 mov	 ecx, DWORD PTR [edx-4]
  00017	33 c8		 xor	 ecx, eax
  00019	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001e	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ
  00023	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ??1_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::~_Container_base12, COMDAT
; _this$ = ecx

; 124  : 		{	// destroy the container

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 125  : 		_Orphan_all();

  00023	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00026	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 126  : 		}

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00034	3b ec		 cmp	 ebp, esp
  00036	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003b	8b e5		 mov	 esp, ebp
  0003d	5d		 pop	 ebp
  0003e	c3		 ret	 0
??1_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::~_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 110  : 		{	// construct childless container

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 109  : 		: _Myproxy(0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 111  : 		}

  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi
  00031	5b		 pop	 ebx
  00032	8b e5		 mov	 esp, ebp
  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\xutility
;	COMDAT ??0_Container_proxy@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Container_proxy@std@@QAE@XZ PROC			; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 98   : 		{	// construct from pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 97   : 		: _Mycont(0), _Myfirstiter(0)

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0002c	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  0002f	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 99   : 		}

  00036	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
??0_Container_proxy@std@@QAE@XZ ENDP			; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC		; std::char_traits<char>::assign, COMDAT

; 441  : 		{	// assign an element

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 442  : 		_Left = _Right;

  0001e	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  00024	8a 11		 mov	 dl, BYTE PTR [ecx]
  00026	88 10		 mov	 BYTE PTR [eax], dl

; 443  : 		}

  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
  0002a	5b		 pop	 ebx
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\iosfwd
;	COMDAT ?move@?$char_traits@D@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADQADQBDI@Z PROC		; std::char_traits<char>::move, COMDAT

; 430  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 431  : 		return (static_cast<char *>(_CSTD memmove(_First1, _First2, _Count)));

  0001e	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR __First2$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 08	 mov	 edx, DWORD PTR __First1$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 _memmove
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 432  : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?move@?$char_traits@D@std@@SAPADQADQBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\iosfwd
;	COMDAT ?copy@?$char_traits@D@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADQADQBDI@Z PROC		; std::char_traits<char>::copy, COMDAT

; 410  : 		{	// copy [_First2, _First2 + _Count) to [_First1, ...)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 411  : 		return (static_cast<char *>(_CSTD memcpy(_First1, _First2, _Count)));

  0001e	8b 45 10	 mov	 eax, DWORD PTR __Count$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 0c	 mov	 ecx, DWORD PTR __First2$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 08	 mov	 edx, DWORD PTR __First1$[ebp]
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 _memcpy
  0002f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 412  : 		}

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0003b	3b ec		 cmp	 ebp, esp
  0003d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADQADQBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\iosfwd
;	COMDAT ?length@?$char_traits@D@std@@SAIQBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIQBD@Z PROC		; std::char_traits<char>::length, COMDAT

; 404  : 		{	// find length of null-terminated string

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 405  : 		return (_CSTD strlen(_First));

  0001e	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 _strlen
  00027	83 c4 04	 add	 esp, 4

; 406  : 		}

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00033	3b ec		 cmp	 ebp, esp
  00035	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c3		 ret	 0
?length@?$char_traits@D@std@@SAIQBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 178  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 179  :         (void)_Size;
; 180  :         return _Where;

  0001e	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 181  :     }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio\2017\enterprise\vc\tools\msvc\14.12.25827\include\limits
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 682  : 		{	// return maximum value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 683  : 		return (INT_MAX);

  0001e	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 684  : 		}

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\repos\galaxy\galaxy\main.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\repos\galaxy\galaxy\main.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
