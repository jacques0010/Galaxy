; Listing generated by Microsoft (R) Optimizing Compiler Version 19.12.25831.0 

	TITLE	C:\Repos\Galaxy\Galaxy\Engine\OGLBuffers\Buffer.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??0Buffer@Graphics@Engine@@QAE@PAMI@Z		; Engine::Graphics::Buffer::Buffer
PUBLIC	??1Buffer@Graphics@Engine@@QAE@XZ		; Engine::Graphics::Buffer::~Buffer
PUBLIC	?bind@Buffer@Graphics@Engine@@QBEXXZ		; Engine::Graphics::Buffer::bind
PUBLIC	?unbind@Buffer@Graphics@Engine@@QBEXXZ		; Engine::Graphics::Buffer::unbind
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	___glewBindBuffer:DWORD
EXTRN	___glewBufferData:DWORD
EXTRN	___glewDeleteBuffers:DWORD
EXTRN	___glewGenBuffers:DWORD
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1Buffer@Graphics@Engine@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\repos\galaxy\galaxy\engine\oglbuffers\buffer.cpp
;	COMDAT ?unbind@Buffer@Graphics@Engine@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?unbind@Buffer@Graphics@Engine@@QBEXXZ PROC		; Engine::Graphics::Buffer::unbind, COMDAT
; _this$ = ecx

; 23   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 24   : 			glBindBuffer(GL_ARRAY_BUFFER, 0);

  00023	8b f4		 mov	 esi, esp
  00025	6a 00		 push	 0
  00027	68 92 88 00 00	 push	 34962			; 00008892H
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR ___glewBindBuffer
  00032	3b f4		 cmp	 esi, esp
  00034	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 25   : 		}

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?unbind@Buffer@Graphics@Engine@@QBEXXZ ENDP		; Engine::Graphics::Buffer::unbind
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\repos\galaxy\galaxy\engine\oglbuffers\buffer.cpp
;	COMDAT ?bind@Buffer@Graphics@Engine@@QBEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?bind@Buffer@Graphics@Engine@@QBEXXZ PROC		; Engine::Graphics::Buffer::bind, COMDAT
; _this$ = ecx

; 18   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 19   : 			glBindBuffer(GL_ARRAY_BUFFER, m_Buffer);

  00023	8b f4		 mov	 esi, esp
  00025	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00028	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002a	51		 push	 ecx
  0002b	68 92 88 00 00	 push	 34962			; 00008892H
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR ___glewBindBuffer
  00036	3b f4		 cmp	 esi, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 20   : 		}

  0003d	5f		 pop	 edi
  0003e	5e		 pop	 esi
  0003f	5b		 pop	 ebx
  00040	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00046	3b ec		 cmp	 ebp, esp
  00048	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?bind@Buffer@Graphics@Engine@@QBEXXZ ENDP		; Engine::Graphics::Buffer::bind
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\repos\galaxy\galaxy\engine\oglbuffers\buffer.cpp
;	COMDAT ??1Buffer@Graphics@Engine@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1Buffer@Graphics@Engine@@QAE@XZ PROC			; Engine::Graphics::Buffer::~Buffer, COMDAT
; _this$ = ecx

; 13   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1Buffer@Graphics@Engine@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	51		 push	 ecx
  0001b	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00021	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	59		 pop	 ecx
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00033	33 c5		 xor	 eax, ebp
  00035	50		 push	 eax
  00036	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00039	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  0003f	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 14   : 			glDeleteBuffers(1, &m_Buffer);

  00042	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]
  00045	8b f4		 mov	 esi, esp
  00047	50		 push	 eax
  00048	6a 01		 push	 1
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR ___glewDeleteBuffers
  00050	3b f4		 cmp	 esi, esp
  00052	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 15   : 		}

  00057	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00061	59		 pop	 ecx
  00062	5f		 pop	 edi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx
  00065	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  0006b	3b ec		 cmp	 ebp, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1Buffer@Graphics@Engine@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 8a 24 ff ff
	ff		 mov	 ecx, DWORD PTR [edx-220]
  0000d	33 c8		 xor	 ecx, eax
  0000f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00014	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1Buffer@Graphics@Engine@@QAE@XZ
  00019	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1Buffer@Graphics@Engine@@QAE@XZ ENDP			; Engine::Graphics::Buffer::~Buffer
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\repos\galaxy\galaxy\engine\oglbuffers\buffer.cpp
;	COMDAT ??0Buffer@Graphics@Engine@@QAE@PAMI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_data$ = 8						; size = 4
_size$ = 12						; size = 4
??0Buffer@Graphics@Engine@@QAE@PAMI@Z PROC		; Engine::Graphics::Buffer::Buffer, COMDAT
; _this$ = ecx

; 6    : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	51		 push	 ecx
  0000d	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00013	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00018	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001d	f3 ab		 rep stosd
  0001f	59		 pop	 ecx
  00020	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 7    : 			glGenBuffers(1 , &m_Buffer);

  00023	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00026	8b f4		 mov	 esi, esp
  00028	50		 push	 eax
  00029	6a 01		 push	 1
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR ___glewGenBuffers
  00031	3b f4		 cmp	 esi, esp
  00033	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 8    : 			bind();

  00038	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003b	e8 00 00 00 00	 call	 ?bind@Buffer@Graphics@Engine@@QBEXXZ ; Engine::Graphics::Buffer::bind

; 9    : 			glBufferData(GL_ARRAY_BUFFER, size, data, GL_STATIC_DRAW);

  00040	8b f4		 mov	 esi, esp
  00042	68 e4 88 00 00	 push	 35044			; 000088e4H
  00047	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  0004a	50		 push	 eax
  0004b	8b 4d 0c	 mov	 ecx, DWORD PTR _size$[ebp]
  0004e	51		 push	 ecx
  0004f	68 92 88 00 00	 push	 34962			; 00008892H
  00054	ff 15 00 00 00
	00		 call	 DWORD PTR ___glewBufferData
  0005a	3b f4		 cmp	 esi, esp
  0005c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 10   : 		}

  00061	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0006d	3b ec		 cmp	 ebp, esp
  0006f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 08 00	 ret	 8
??0Buffer@Graphics@Engine@@QAE@PAMI@Z ENDP		; Engine::Graphics::Buffer::Buffer
_TEXT	ENDS
END
